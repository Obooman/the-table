{"version":3,"sources":["components/InfiniteGrid/index.js","components/Rows/index.js","utils/excelColumnStrNum.js","components/Columns/index.js","utils/getDecimalTimes.js","utils/stringCalc.js","utils/getVariable.js","utils/calculateFunctions/sum.js","utils/calculateFunctions/avg.js","utils/getFunctions.js","utils/calculateFunctions/pi.js","utils/getTextLength.js","components/ActiveCell/EditingCell/index.js","components/ActiveCell/FocusCell/index.js","components/ActiveCell/index.js","components/Cell/index.js","components/DataTable /index.js","App.js","models/sheets.js","models/editor.js","models/index.js","index.js","app.module.css","components/InfiniteGrid/main.module.css","components/ActiveCell/main.module.css"],"names":["InfiniteGrid","size","cellSize","getData","onClick","theme","scrollLeft","scrollTop","onScroll","children","containerRef","useRef","useState","position","updatePosition","contentSize","updateContentSize","pageGrid","updatePageGrid","useEffect","width","current","offsetWidth","height","offsetHeight","pageRestPixelsWidth","pageRestPixelsHeight","contentBlockWidth","contentBlockHeight","scrollContainer","updateContentPanel","needUpdate","x","y","nextX","parseInt","nextY","addEventListener","removeEventListener","containerClassName","classnames","styles","grey","isGrey","tableContainer","barless","ref","className","style","overflow","tableContent","left","top","Array","from","length","map","a","colIndex","rowIndex","cell","connect","state","editor","scrollPosition","row","col","ordA","charCodeAt","number","str","String","fromCharCode","Math","floor","numberToColumnString","toUpperCase","numberString","toString","test","indexOf","types","ExpressionStatement","BinaryExpression","UnaryExpression","CallExpression","Literal","Identifier","operators","getArithmeticResult","b","operator","timeValue","pow","max","getDecimalTimes","Error","isVariable","name","getVariableValue","SUM","index","sum","times","numbers","value","Number","decimalTimes","insetFunctions","AVG","PI","isFunction","getFunction","ctx","document","createElement","getContext","getTextLength","text","font","measureText","sheets","dispatch","onBlur","rows","expression","setWidth","onUpdateHandler","ev","result","data","target","isExpression","parseString","getValue","block","type","argument","rightHandNumber","right","functionName","callee","apply","this","arguments","acorn","ecmaVersion","body","syntaxError","stringCalc","slice","error","calculateResult","updateValue","column","focusBlock","onChange","stopPropagation","defaultValue","autoFocus","editingBorderTextContent","onKeyDown","key","ActiveCell","editing","setEditing","onDoubleClick","console","log","changePosition","nativeEvent","offsetX","offsetY","positionData","updateScrollPosition","App","app","tableApplication","rowsTitle","cornerBlock","dataContent","columnHeader","contentTable","initialState","11","12","columns","1","A12","refedBy","A11","reducers","payload","changeRow","13","effects","mode","selectedValue","store","init","models","window","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.17d0c403.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport styles from \"./main.module.css\";\n\nexport function InfiniteGrid({\n  size,\n  cellSize,\n  getData,\n  onClick,\n  theme = {},\n  scrollLeft = 0,\n  scrollTop = 0,\n  onScroll,\n  children,\n}) {\n  const containerRef = useRef();\n  const [position, updatePosition] = useState([0, 0]);\n  const [contentSize, updateContentSize] = useState([0, 0]);\n  const [pageGrid, updatePageGrid] = useState([0, 0]);\n\n  useEffect(() => {\n    const width = containerRef.current.offsetWidth;\n    const height = containerRef.current.offsetHeight;\n\n    let pageRestPixelsWidth = (size[0] * cellSize[0]) % width;\n    let pageRestPixelsHeight = (size[1] * cellSize[1]) % height;\n\n    let contentBlockWidth = (width * 2 + pageRestPixelsWidth) / cellSize[0];\n    let contentBlockHeight = (height * 2 + pageRestPixelsHeight) / cellSize[1];\n\n    updatePageGrid([width, height]);\n    updateContentSize([contentBlockWidth, contentBlockHeight]);\n  }, [size, cellSize]);\n\n  useEffect(() => {\n    const scrollContainer = containerRef.current;\n    const updateContentPanel = function () {\n      const { scrollTop, scrollLeft } = scrollContainer;\n\n      let needUpdate = false;\n\n      const [x, y] = position;\n      const nextX = parseInt(scrollLeft / pageGrid[0]);\n      const nextY = parseInt(scrollTop / pageGrid[1]);\n\n      if (nextX !== x) {\n        needUpdate = true;\n      }\n      if (nextY !== y) {\n        needUpdate = true;\n      }\n\n      if (needUpdate) {\n        updatePosition([nextX, nextY]);\n      }\n\n      onScroll && onScroll({ scrollLeft, scrollTop });\n    };\n\n    scrollContainer.addEventListener(\"scroll\", updateContentPanel, false);\n    return () =>\n      scrollContainer.removeEventListener(\"scroll\", updateContentPanel, false);\n  }, [contentSize, position, cellSize, onScroll, pageGrid]);\n\n  const containerClassName = classnames({\n    [styles.grey]: theme.isGrey,\n    [styles.tableContainer]: true,\n    [styles.barless]: theme.barless,\n  });\n\n  useEffect(() => {\n    containerRef.current.scrollLeft = scrollLeft;\n    containerRef.current.scrollTop = scrollTop;\n  }, [scrollLeft, scrollTop]);\n\n  return (\n    <div ref={containerRef} className={containerClassName}>\n      <div\n        style={{\n          width: size[0] * cellSize[0],\n          height: size[1] * cellSize[1],\n          overflow: \"hidden\",\n        }}\n        onClick={onClick}\n      >\n        <div\n          className={styles.tableContent}\n          style={{\n            width: contentSize[0] * cellSize[0],\n            height: contentSize[1] * cellSize[1],\n            left: ((position[0] * contentSize[0]) / 2) * cellSize[0],\n            top: ((position[1] * contentSize[1]) / 2) * cellSize[1],\n          }}\n        >\n          {Array.from({ length: contentSize[0] }).map((a, colIndex) => {\n            return Array.from({ length: contentSize[1] }).map((a, rowIndex) => {\n              return (\n                <div\n                  className={styles.cell}\n                  style={{\n                    left: colIndex * 60,\n                    top: rowIndex * 20,\n                  }}\n                >\n                  {getData(\n                    (position[1] * contentSize[1]) / 2 + rowIndex,\n                    (position[0] * contentSize[0]) / 2 + colIndex\n                  )}\n                </div>\n              );\n            });\n          })}\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { connect } from \"react-redux\";\n\nexport const Rows = ({ scrollTop }) => (\n  <InfiniteGrid\n    size={[1, 80]}\n    cellSize={[60, 20]}\n    getData={(row, col) => {\n      return row + 1;\n    }}\n    theme={{\n      barless: true,\n      isGrey: true,\n    }}\n    scrollTop={scrollTop}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollTop: state.editor.scrollPosition.scrollTop,\n});\n\nexport default connect(mapStateToProps)(Rows);\n","var ordA = \"a\".charCodeAt(0);\nvar ordZ = \"z\".charCodeAt(0);\nvar length = ordZ - ordA + 1;\n\n// https://stackoverflow.com/a/8241071/4670002\nexport function numberToColumnString(number) {\n  var str = \"\";\n  while (number >= 0) {\n    str = String.fromCharCode((number % length) + ordA) + str;\n    number = Math.floor(number / length) - 1;\n  }\n  return str;\n}\n\n// https://stackoverflow.com/a/9906193/4670002\nexport function columnStringToNumber(string) {\n  let i;\n  let j;\n  let result = 0;\n\n  for (i = 0, j = string.length - 1; i < string.length; i += 1, j -= 1) {\n    result += Math.pow(length, j) * (string[i].charCodeAt(0) - ordA + 1);\n  }\n\n  return result - 1;\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { numberToColumnString } from \"../../utils/excelColumnStrNum\";\nimport { connect } from \"react-redux\";\n\nexport const Columns = ({ scrollLeft }) => (\n  <InfiniteGrid\n    size={[30, 1]}\n    cellSize={[60, 20]}\n    getData={(row, col) => {\n      return numberToColumnString(col).toUpperCase();\n    }}\n    theme={{ isGrey: true, barless: true }}\n    scrollLeft={scrollLeft}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollLeft: state.editor.scrollPosition.scrollLeft,\n});\n\nexport default connect(mapStateToProps)(Columns);\n","export default (number) => {\n  const numberString = number.toString();\n  if (!/\\./.test(numberString)) {\n    return 0;\n  }\n\n  return numberString.length - numberString.indexOf(\".\") - 1;\n};\n","import * as acorn from \"acorn\";\nimport getDecimalTimes from \"./getDecimalTimes\";\n\nconst types = {\n  ExpressionStatement: true,\n  BinaryExpression: true,\n  UnaryExpression: true,\n  CallExpression: true,\n  Literal: true,\n  Identifier: true,\n};\n\nconst operators = {\n  addition: \"addition\",\n  subtraction: \"subtraction\",\n  multiplication: \"multiplication\",\n};\n\nconst getArithmeticResult = (a, b, operator) => {\n  const timeValue = Math.pow(\n    10,\n    Math.max(getDecimalTimes(a), getDecimalTimes(b))\n  );\n\n  switch (operator) {\n    case operators.addition:\n      return (a * timeValue + b * timeValue) / timeValue;\n    case operators.subtraction:\n      return (a * timeValue - b * timeValue) / timeValue;\n    case operators.multiplication:\n      return (a * timeValue * b * timeValue) / timeValue / timeValue;\n    default:\n      throw new Error(\"Invalid arithmetic operator\");\n  }\n};\n\nexport default function calculate(\n  parseString,\n  { isVariable, getVariableValue },\n  { isFunction, getFunction }\n) {\n  try {\n    const value = getValue(\n      acorn.parse(parseString, {\n        ecmaVersion: 2020,\n      }).body[0].expression\n    );\n    return [false, value];\n  } catch (syntaxError) {\n    return [syntaxError, 0];\n  }\n\n  function getValue(block) {\n    if (!types[block.type]) {\n      throw new Error(\"Unsupported syntax block\" + block.type);\n    }\n\n    if (block.type === \"Literal\") {\n      if (!/\\d+/.test(block.value)) {\n        throw new Error(\"invalid literal value\");\n      }\n\n      return block.value;\n    }\n\n    if (block.type === \"UnaryExpression\") {\n      if (!/\\+|-/.test(block.operator)) {\n        throw new Error(\"Invalid Unary Expression\");\n      }\n\n      return block.operator === \"+\"\n        ? getValue(block.argument)\n        : -getValue(block.argument);\n    }\n\n    if (block.type === \"BinaryExpression\") {\n      let rightHandNumber = getValue(block.right);\n      switch (block.operator) {\n        case \"+\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.addition\n          );\n        case \"-\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.subtraction\n          );\n        case \"*\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.multiplication\n          );\n        case \"/\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) / rightHandNumber;\n        case \"%\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) % rightHandNumber;\n        default:\n          throw new Error(\"Unknown operator detected\");\n      }\n    }\n\n    if (block.type === \"CallExpression\") {\n      const functionName = block.callee.name;\n      if (isFunction(functionName)) {\n        return getFunction(functionName).apply(\n          this,\n          block.arguments.map((block) => {\n            return getValue(block);\n          })\n        );\n      } else {\n        throw new Error(\"calling unknown inset function\");\n      }\n    }\n\n    if (block.type === \"Identifier\") {\n      if (isVariable(block.name)) {\n        return getVariableValue(block.name);\n      }\n\n      throw new Error(\"using undefined variable\");\n    }\n  }\n}\n","// import store from \"../models/index\";\n\n// the design is have an ZZZ * 99999999 sheet\nexport const isVariable = (name) => {\n  return /^[a-z]{1,3}\\d{1,8}$$/gim.test(name);\n};\n\nexport const getVariableValue = (name) => {\n  // const [, col, rows] = /^([a-z]+)(\\d+)$/.match(name);\n  // return store.getState().sheets.cols[rows][col];\n  return 1;\n};\n","import getDecimalTimes from \"../getDecimalTimes\";\n\nexport default function SUM(...numbers) {\n  let index = 0;\n  let sum = 0;\n  let times = 0;\n\n  while (index < numbers.length) {\n    let value = numbers[index];\n\n    if (typeof value === \"string\") {\n      value = Number(value);\n    }\n\n    if (!(typeof value === \"number\")) {\n      value = 0;\n    }\n\n    const decimalTimes = getDecimalTimes(value);\n\n    if (decimalTimes > times) {\n      sum *= Math.pow(10, decimalTimes - times);\n      value *= Math.pow(10, decimalTimes);\n      times = decimalTimes;\n    } else if (decimalTimes <= times) {\n      value *= Math.pow(10, times);\n    }\n\n    sum += value;\n    index++;\n  }\n\n  return sum / Math.pow(10, times);\n}\n","import sum from \"./sum\";\n\nexport default (...numbers) => {\n  if (numbers.length === 0) {\n    return 0;\n  }\n  return sum(...numbers) / numbers.length;\n};\n","import sum from \"./calculateFunctions/sum\";\nimport avg from \"./calculateFunctions/avg\";\nimport pi from \"./calculateFunctions/pi\";\n\nconst insetFunctions = {\n  SUM: sum,\n  AVG: avg,\n  PI: pi,\n};\n\nexport const isFunction = (name) => name.toUpperCase() in insetFunctions;\n\nexport const getFunction = (name) => {\n  return isFunction(name) && insetFunctions[name.toUpperCase()];\n};\n","export default () => Math.PI;\n","const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\nexport default function getTextLength(text) {\n  ctx.font = \"16px sans-serif\";\n  return ctx.measureText(text).width;\n}\n\nexport const registerTextFont = () => {};\n","import React, { useState } from \"react\";\nimport stringCalc from \"../../../utils/stringCalc\";\nimport { isVariable, getVariableValue } from \"../../../utils/getVariable\";\nimport { isFunction, getFunction } from \"../../../utils/getFunctions\";\nimport getTextLength from \"../../../utils/getTextLength\";\nimport styles from \"../main.module.css\";\nimport { connect } from \"react-redux\";\n\nconst cellWidth = 59;\n\nexport const EditingCell = ({ dispatch, onBlur, sheets, row, col }) => {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {\n    expression: \"\",\n    value: \"\",\n  };\n\n  const [width, setWidth] = useState(\n    parseInt(getTextLength(cell.expression) / cellWidth) + 1\n  );\n\n  const onChangeHandler = (ev) => {\n    const data = ev.target.value;\n\n    if (getTextLength(data) > width * cellWidth) {\n      setWidth(width + 1);\n    }\n  };\n\n  const onUpdateHandler = (ev) => {\n    const data = ev.target.value;\n    const isExpression = /^=/.test(data);\n    let result;\n    let expression;\n\n    if (isExpression) {\n      expression = data.slice(1);\n      const [error, calculateResult] = stringCalc(\n        expression,\n        {\n          isVariable,\n          getVariableValue,\n        },\n        {\n          isFunction,\n          getFunction,\n        }\n      );\n\n      if (!error) {\n        result = calculateResult;\n      } else {\n        result = \"#ERROR\";\n      }\n    } else {\n      result = data;\n    }\n\n    dispatch.sheets.updateValue({\n      row,\n      column: col,\n      isExpression,\n      value: result,\n      expression: expression,\n    });\n\n    onBlur && onBlur(ev);\n  };\n\n  const onBlurHandler = (ev) => {\n    onUpdateHandler(ev);\n    onBlur && onBlur(ev);\n  };\n\n  return (\n    <div>\n      <div\n        className={styles.focusBlock}\n        style={{\n          width: width * cellWidth,\n        }}\n        onChange={onChangeHandler}\n        onClick={(ev) => {\n          ev.stopPropagation();\n        }}\n      >\n        <input\n          defaultValue={cell.isExpression ? `=${cell.expression}` : cell.value}\n          autoFocus\n          type=\"text\"\n          className={styles.editingBorderTextContent}\n          onBlur={onBlurHandler}\n          onKeyDown={(ev) => {\n            if (ev.key === \"Enter\") {\n              onUpdateHandler(ev);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(EditingCell);\n","import React from \"react\";\nimport styles from \"../main.module.css\";\nimport { connect } from \"react-redux\";\n\nexport const FocusCell = ({ sheets, row, col }) => {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {};\n  const value = \"value\" in cell ? cell.value : \"\";\n  return <div className={styles.focusBlock}>{value}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(FocusCell);\n","import React, { useState } from \"react\";\nimport EditingCell from \"./EditingCell\";\nimport FocusCell from \"./FocusCell\";\nimport { connect } from \"react-redux\";\n\nexport const ActiveCell = ({ dispatch, row, col }) => {\n  const [editing, setEditing] = useState(false);\n  return (\n    <div>\n      {editing ? (\n        <EditingCell\n          row={row}\n          col={col}\n          onBlur={() => {\n            // dispatch.sheets.updateValue();\n            setEditing(false);\n          }}\n        ></EditingCell>\n      ) : (\n        <div\n          onDoubleClick={(ev) => {\n            setEditing(true);\n          }}\n          onClick={(ev) => {\n            ev.stopPropagation();\n          }}\n        >\n          <FocusCell row={row} col={col} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(ActiveCell);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nexport function Cell({ col, row, sheets }) {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {};\n  const value = \"value\" in cell ? cell.value : \"\";\n  return <div>{value}</div>;\n}\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(Cell);\n","import React, { useState } from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { ActiveCell } from \"../ActiveCell\";\nimport Cell from \"../Cell\";\nimport { connect } from \"react-redux\";\n\nexport const DataTable = ({ dispatch }) => {\n  console.log(\"DataTable rerender\");\n  const [position, changePosition] = useState([0, 0]);\n  return (\n    <InfiniteGrid\n      size={[20, 20]}\n      cellSize={[60, 20]}\n      getData={(row, col) => {\n        return <Cell row={row} col={col} />;\n      }}\n      onClick={(ev) => {\n        changePosition([\n          parseInt(ev.nativeEvent.offsetX / 60),\n          parseInt(ev.nativeEvent.offsetY / 20),\n        ]);\n      }}\n      theme={{\n        isGrey: false,\n      }}\n      onScroll={(positionData) => {\n        dispatch.editor.updateScrollPosition(positionData);\n      }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          left: position[0] * 60,\n          top: position[1] * 20,\n        }}\n      >\n        <ActiveCell row={position[1]} col={position[0]} />\n      </div>\n    </InfiniteGrid>\n  );\n};\n\nexport default connect()(DataTable);\n","import React from \"react\";\nimport Rows from \"./components/Rows\";\nimport Columns from \"./components/Columns\";\nimport DataTable from \"./components/DataTable \";\nimport styles from \"./app.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <div className={styles.tableApplication}>\n        <div className={styles.rowsTitle}>\n          <div className={styles.cornerBlock}></div>\n          <Rows />\n        </div>\n        <div className={styles.dataContent}>\n          <div className={styles.columnHeader}>\n            <Columns />\n          </div>\n          <div className={styles.contentTable}>\n            <DataTable />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  rows: {\n    11: {},\n    12: {},\n  },\n  columns: {\n    1: {},\n  },\n};\n\nconst A12 = {\n  row: initialState.rows[12],\n  col: initialState.columns[1],\n  value: 25,\n  refedBy: [],\n  isExpression: true,\n  expression: \"A11*2+1\",\n};\n\nconst A11 = {\n  row: initialState.rows[11],\n  col: initialState.columns[1],\n  value: 12,\n  refedBy: [A12],\n  isExpression: true,\n  expression: \"1+4*2+SUM(1,2)\",\n};\n\ninitialState.rows[11][1] = A11;\ninitialState.rows[12][1] = A12;\n\nexport default {\n  state: initialState,\n  reducers: {\n    updateValue(state, payload) {\n      return {\n        ...state,\n        rows: {\n          ...state.rows,\n          [payload.row]: {\n            ...state.rows[payload.row],\n            [payload.column]: payload,\n          },\n        },\n      };\n    },\n    changeRow(state, payload) {\n      const row = state.rows[11];\n      delete state.rows[11];\n      return {\n        ...state,\n        rows: {\n          ...state.rows,\n          13: row,\n        },\n      };\n    },\n  },\n  effects: {},\n};\n","export default {\n  state: {\n    mode: \"\" /* focused | editing */,\n    expression: \"\",\n    selectedValue: {\n      /* row,col */\n    },\n    cell: {\n      width: 60,\n      height: 20,\n    },\n    scrollPosition: {\n      scrollLeft: 0,\n      scrollTop: 0,\n    },\n  },\n  reducers: {\n    updateScrollPosition(state, payload) {\n      return {\n        ...state,\n        scrollPosition: payload,\n      };\n    },\n  },\n  effects: (dispatch) => ({}),\n};\n","import { init } from \"@rematch/core\";\nimport sheets from \"./sheets\";\nimport editor from \"./editor\";\n\nconst store = init({\n  models: {\n    sheets,\n    editor,\n  },\n});\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./models\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"tableApplication\":\"app_tableApplication__3tpc6\",\"rowsTitle\":\"app_rowsTitle__2Zbtn\",\"cornerBlock\":\"app_cornerBlock__iLuJQ\",\"dataContent\":\"app_dataContent__3hjQe\",\"columnHeader\":\"app_columnHeader__298vN\",\"contentTable\":\"app_contentTable__1qSbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"main_grey__2Mkp3\",\"tableContent\":\"main_tableContent__3uOra\",\"barless\":\"main_barless__hNoCM\",\"tableContainer\":\"main_tableContainer__2Zf2n\",\"focus\":\"main_focus__-eHuC\",\"cell\":\"main_cell__2WWoR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"focusBlock\":\"main_focusBlock__1BEst\",\"editingBorder\":\"main_editingBorder__QkzpS\",\"editingBorderTextContent\":\"main_editingBorderTextContent___xjOU\"};"],"sourceRoot":""}