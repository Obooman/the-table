{"version":3,"sources":["components/Columns/main.module.css","components/Rows/main.module.css","components/Cell/main.module.css","components/CornerBlock/main.module.css","utils/getTableGrid.js","components/InfiniteGrid/index.js","components/Rows/index.js","utils/excelColumnStrNum.js","utils/sort.js","models/sorter.js","utils/sortRows.js","components/Columns/index.js","utils/getDecimalTimes.js","utils/stringCalc.js","utils/getVariable.js","utils/calculateFunctions/sum.js","utils/calculateFunctions/avg.js","utils/getFunctions.js","utils/calculateFunctions/pi.js","utils/getTextLength.js","models/editor.js","components/ActiveCell/EditingCell/index.js","utils/canBeNumber.js","components/ActiveCell/FocusCell/index.js","components/ActiveCell/index.js","components/Cell/index.js","models/sheets.js","models/index.js","components/DataTable/registerKeyboardListeners.js","components/DataTable/index.js","components/CornerBlock/index.js","App.js","index.js","components/ActiveCell/main.module.css","app.module.css","components/InfiniteGrid/main.module.css"],"names":["module","exports","getTableGrid","width","height","color","InfiniteGrid","size","cellSize","getData","onClick","theme","scrollLeft","scrollTop","onScroll","children","locked","containerRef","useRef","useState","position","updatePosition","contentSize","updateContentSize","gridSize","updateGridSize","maxPage","updateMaxPage","useEffect","current","offsetWidth","offsetHeight","gridWidth","Math","ceil","gridHeight","pageRestPixelsWidth","pageRestPixelsHeight","contentBlockWidth","contentBlockHeight","maxPageX","parseInt","maxPageY","scrollContainer","updateContentPanel","ev","needUpdate","x","y","nextX","nextY","addEventListener","removeEventListener","containerClassName","classnames","styles","grey","isGrey","tableContainer","barless","preventDefault","ref","className","style","overflow","tableContent","left","top","backgroundImage","Array","from","length","map","a","colIndex","rowIndex","relative","row","column","absolute","connect","state","editor","scrollPosition","cell","tableSize","absRow","rowHeaderItem","key","ordA","charCodeAt","isNumber","value","isUndefined","undefined","isNothing","sortFunction","former","latter","isIncrease","multiple","localeCompare","sortModes","increase","decrease","sortType","sorters","reducers","updateSorter","nextSorters","currentSorter","sortMode","effects","dispatch","sort","globalState","sorter","filter","concat","sheets","rebuildSheets","data","rows","arr","sorterIndex","result","sortSheet","Object","values","forEach","index","sortRows","absColumn","columnTitle","number","str","String","fromCharCode","floor","numberToColumnString","toUpperCase","numberString","toString","test","indexOf","types","ExpressionStatement","BinaryExpression","UnaryExpression","CallExpression","Literal","Identifier","operators","getArithmeticResult","b","operator","timeValue","pow","max","getDecimalTimes","Error","isVariable","name","getVariableValue","SUM","sum","times","numbers","Number","decimalTimes","insetFunctions","AVG","PI","isFunction","getFunction","ctx","document","createElement","getContext","getTextLength","text","font","measureText","modes","mode","focusCell","col","editingValue","updateScrollPosition","payload","updateMode","updateFocusCell","updateEditingValue","onBlur","expression","setWidth","onUpdateHandler","target","isExpression","parseString","getValue","block","type","argument","rightHandNumber","right","functionName","callee","apply","this","arguments","acorn","ecmaVersion","body","syntaxError","stringCalc","slice","error","calculateResult","canBeNumber","updateValue","focusBlock","onChange","console","log","stopPropagation","defaultValue","autoFocus","editingBorderTextContent","onKeyDown","classNames","onDoubleClick","activeCellWrapper","changeRow","0","store","init","models","window","columns","event","code","getState","editorModes","registerKeyboardListeners","nativeEvent","offsetY","offsetX","positionData","cornerBlock","App","app","tableApplication","rowsTitle","dataContent","columnHeader","contentTable","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f32f403a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"columnTitle\":\"main_columnTitle__1FTAc\",\"sort\":\"main_sort__2z94d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowHeaderItem\":\"main_rowHeaderItem__3Llca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"main_cell__1Fu2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cornerBlock\":\"main_cornerBlock__KFDIF\"};","export default function getTableGrid(width, height, color) {\n  return `repeating-linear-gradient(\n  transparent 0px,\n  transparent ${height - 1}px,\n  ${color} ${height - 1}px,\n  ${color} ${height}px\n),\nrepeating-linear-gradient(\n  90deg,\n  transparent 0px,\n  transparent ${width - 1}px,\n  ${color} ${width - 1}px,\n  ${color} ${width}px\n)`;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport styles from \"./main.module.css\";\nimport getTableGrid from \"../../utils/getTableGrid\";\n\nexport function InfiniteGrid({\n  size,\n  cellSize,\n  getData,\n  onClick,\n  theme = {},\n  scrollLeft = 0,\n  scrollTop = 0,\n  onScroll,\n  children,\n  locked,\n}) {\n  const containerRef = useRef();\n  const [position, updatePosition] = useState([0, 0]);\n  const [contentSize, updateContentSize] = useState([0, 0]);\n  const [gridSize, updateGridSize] = useState([0, 0]);\n  const [maxPage, updateMaxPage] = useState([0, 0]);\n\n  useEffect(() => {\n    const width = containerRef.current.offsetWidth;\n    const height = containerRef.current.offsetHeight;\n\n    const gridWidth = Math.ceil(width / cellSize[0]);\n    const gridHeight = Math.ceil(height / cellSize[1]);\n\n    let pageRestPixelsWidth = size[0] % gridWidth;\n    let pageRestPixelsHeight = size[1] % gridHeight;\n\n    const xAxisGrid = gridWidth * 2 > size[0] ? size[0] : gridWidth * 2;\n    const yAxisGrid = gridHeight * 2 > size[1] ? size[1] : gridHeight * 2;\n\n    let contentBlockWidth = xAxisGrid + pageRestPixelsWidth;\n    let contentBlockHeight = yAxisGrid + pageRestPixelsHeight;\n\n    let maxPageX = parseInt(size[0] / gridWidth) - 1;\n    let maxPageY = parseInt(size[1] / gridHeight) - 1;\n\n    if (maxPageX > 2) {\n      maxPageX -= 1;\n    }\n\n    if (maxPageY > 2) {\n      maxPageY -= 1;\n    }\n\n    updateGridSize([gridWidth, gridHeight]);\n    updateContentSize([contentBlockWidth, contentBlockHeight]);\n    updateMaxPage([maxPageX, maxPageY]);\n  }, [size, cellSize]);\n\n  useEffect(() => {\n    const scrollContainer = containerRef.current;\n\n    const updateContentPanel = function (ev) {\n      const { scrollTop, scrollLeft } = scrollContainer;\n\n      let needUpdate = false;\n\n      const [x, y] = position;\n      let nextX = parseInt(scrollLeft / (gridSize[0] * cellSize[0]));\n      let nextY = parseInt(scrollTop / (gridSize[1] * cellSize[1]));\n\n      nextX = nextX > maxPage[0] ? maxPage[0] : nextX;\n      nextY = nextY > maxPage[1] ? maxPage[1] : nextY;\n\n      if (nextX !== x) {\n        needUpdate = true;\n      }\n\n      if (nextY !== y) {\n        needUpdate = true;\n      }\n\n      if (needUpdate) {\n        updatePosition([nextX, nextY]);\n      }\n\n      onScroll && onScroll({ scrollLeft, scrollTop });\n    };\n\n    scrollContainer.addEventListener(\"scroll\", updateContentPanel, false);\n    return () =>\n      scrollContainer.removeEventListener(\"scroll\", updateContentPanel, false);\n  }, [contentSize, position, cellSize, onScroll, gridSize, maxPage]);\n\n  const containerClassName = classnames({\n    [styles.grey]: theme.isGrey,\n    [styles.tableContainer]: true,\n    [styles.barless]: theme.barless,\n  });\n\n  useEffect(() => {\n    if (locked) {\n      const updateContentPanel = (ev) => ev.preventDefault();\n      containerRef.current.addEventListener(\n        \"mousewheel\",\n        updateContentPanel,\n        false\n      );\n    }\n  }, [locked]);\n\n  useEffect(() => {\n    containerRef.current.scrollLeft = scrollLeft;\n    containerRef.current.scrollTop = scrollTop;\n  }, [scrollLeft, scrollTop]);\n\n  return (\n    <div ref={containerRef} className={containerClassName}>\n      <div\n        style={{\n          width: size[0] * cellSize[0],\n          height: size[1] * cellSize[1],\n          overflow: \"hidden\",\n        }}\n        onClick={onClick}\n      >\n        <div\n          className={styles.tableContent}\n          style={{\n            width: contentSize[0] * cellSize[0],\n            height: contentSize[1] * cellSize[1],\n            left: position[0] * gridSize[0] * cellSize[0],\n            top: position[1] * gridSize[1] * cellSize[1],\n            backgroundImage: getTableGrid(...cellSize, \"#d4d4d4\"),\n          }}\n        >\n          {Array.from({ length: contentSize[0] }).map((a, colIndex) => {\n            return Array.from({ length: contentSize[1] }).map((a, rowIndex) => {\n              return getData({\n                relative: {\n                  row: rowIndex,\n                  column: colIndex,\n                },\n                absolute: {\n                  row: position[1] * gridSize[1] + rowIndex,\n                  column: position[0] * gridSize[0] + colIndex,\n                },\n              });\n            });\n          })}\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { connect } from \"react-redux\";\nimport styles from \"./main.module.css\";\nimport { tableSize } from \"../../theTableConfig.json\";\n\nexport const Rows = ({ scrollTop, cellSize }) => (\n  <InfiniteGrid\n    locked\n    size={[1, tableSize[1]]}\n    cellSize={cellSize}\n    getData={({ relative: { row, column }, absolute: { row: absRow } }) => {\n      return (\n        <span\n          className={styles.rowHeaderItem}\n          key={`${row}-${column}`}\n          style={{\n            left: column * cellSize[0],\n            top: row * cellSize[1],\n            width: cellSize[0],\n            height: cellSize[1],\n          }}\n        >\n          <span>{absRow + 1}</span>\n        </span>\n      );\n    }}\n    theme={{\n      barless: true,\n      isGrey: true,\n    }}\n    scrollTop={scrollTop}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollTop: state.editor.scrollPosition.scrollTop,\n  cellSize: [state.editor.cell.width, state.editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(Rows);\n","var ordA = \"a\".charCodeAt(0);\nvar ordZ = \"z\".charCodeAt(0);\nvar length = ordZ - ordA + 1;\n\n// https://stackoverflow.com/a/8241071/4670002\nexport function numberToColumnString(number) {\n  var str = \"\";\n  while (number >= 0) {\n    str = String.fromCharCode((number % length) + ordA) + str;\n    number = Math.floor(number / length) - 1;\n  }\n  return str;\n}\n\n// https://stackoverflow.com/a/9906193/4670002\nexport function columnStringToNumber(string) {\n  let i;\n  let j;\n  let result = 0;\n\n  for (i = 0, j = string.length - 1; i < string.length; i += 1, j -= 1) {\n    result += Math.pow(length, j) * (string[i].charCodeAt(0) - ordA + 1);\n  }\n\n  return result - 1;\n}\n","const isString = (value) => typeof value === \"string\";\nconst isNumber = (value) => typeof value === \"number\";\nconst isUndefined = (value) => value === undefined;\nconst isNothing = (value) => value.length === 0;\n\nexport function sortFunction(former, latter, isIncrease) {\n  const multiple = isIncrease ? 1 : -1;\n\n  if (isUndefined(former) && isUndefined(latter)) {\n    return 0;\n  }\n\n  if (isUndefined(former) && !isUndefined(latter)) {\n    return 1;\n  }\n\n  if (!isUndefined(former) && isUndefined(latter)) {\n    return -1;\n  }\n\n  if (isNumber(former) && isNumber(latter)) {\n    return multiple * (former - latter);\n  }\n\n  if (isNothing(former) && isNothing(latter)) {\n    return 0;\n  }\n\n  if (isNothing(former) && !isNothing(latter)) {\n    return 1;\n  }\n\n  if (!isNothing(former) && isNothing(latter)) {\n    return -1;\n  }\n\n  if (isString(former)) {\n    return multiple * former.localeCompare(latter);\n  } else {\n    return -1 * multiple * latter.localeCompare(former);\n  }\n}\n\nexport default (objects, getValue, isIncrease) => {\n  return objects.sort((former, latter) =>\n    sortFunction(getValue(former), getValue(latter), isIncrease)\n  );\n};\n","import sortRows from \"../utils/sortRows\";\n\nexport const sortModes = {\n  increase: \"increase\",\n  decrease: \"decrease\",\n};\n\nexport default {\n  state: {\n    sortType: {},\n    sorters: [],\n  },\n  reducers: {\n    updateSorter(state, { nextSorters, currentSorter }) {\n      const sortType = {\n        ...state.sortType,\n        [currentSorter.column]: currentSorter,\n      };\n\n      if (!currentSorter.sortMode) {\n        delete sortType[currentSorter.column];\n      } else {\n        sortType[currentSorter.column] = currentSorter;\n      }\n\n      return {\n        sorters: nextSorters,\n        sortType,\n      };\n    },\n  },\n  effects: (dispatch) => ({\n    sort({ column }, globalState) {\n      const { sortType, sorters } = globalState.sorter;\n      let currentSorter = sortType[column];\n      let nextSorters;\n\n      if (!currentSorter) {\n        currentSorter = {\n          column,\n          sortMode: sortModes.increase,\n        };\n        nextSorters = [...sorters, currentSorter];\n      } else if (currentSorter.sortMode === sortModes.increase) {\n        currentSorter.sortMode = sortModes.decrease;\n        nextSorters = sorters\n          .filter((sorter) => sorter.column !== column)\n          .concat([currentSorter]);\n      } else {\n        currentSorter.sortMode = null;\n        nextSorters = sorters.filter((sorter) => sorter.column !== column);\n      }\n\n      dispatch.sorter.updateSorter({\n        nextSorters,\n        currentSorter,\n      });\n\n      dispatch.sheets.rebuildSheets(\n        sortRows(globalState.sheets.rows, nextSorters)\n      );\n    },\n  }),\n};\n","import { sortModes } from \"../models/sorter\";\nimport { sortFunction } from \"./sort\";\n\nexport default function sortRows(data, sorters) {\n  let rows = {};\n\n  function sortSheet(arr, sorters) {\n    if (sorters.length === 0) {\n      return arr;\n    }\n\n    return arr.sort((former, latter) => {\n      let sorterIndex = sorters.length - 1;\n      let result = 0;\n      const { sortMode, column } = sorters[sorterIndex];\n      while (!(result !== 0 || sorterIndex < 0)) {\n        result = sortFunction(\n          former[column]?.value,\n          latter[column]?.value,\n          sortMode === sortModes.increase\n        );\n        sorterIndex--;\n      }\n      return result;\n    });\n  }\n\n  const sortedArr = sortSheet(Object.values(data), sorters);\n\n  sortedArr.forEach((row, index) => {\n    rows[index] = row;\n  });\n\n  return {\n    rows: rows,\n  };\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { numberToColumnString } from \"../../utils/excelColumnStrNum\";\nimport { connect } from \"react-redux\";\nimport styles from \"./main.module.css\";\nimport { sortModes } from \"../../models/sorter\";\nimport { tableSize } from \"../../theTableConfig.json\";\n\nexport const Columns = ({ scrollLeft, sortType, dispatch, cellSize }) => (\n  <InfiniteGrid\n    locked\n    size={[tableSize[0], 1]}\n    cellSize={cellSize}\n    getData={({\n      relative: { row, column },\n      absolute: { column: absColumn },\n    }) => {\n      return (\n        <span\n          key={`${row}-${column}`}\n          className={styles.columnTitle}\n          style={{\n            left: column * cellSize[0],\n            top: row * cellSize[1],\n            width: cellSize[0],\n            height: cellSize[1],\n          }}\n          onClick={() => {\n            dispatch.sorter.sort({ column: absColumn });\n          }}\n        >\n          <span>\n            {numberToColumnString(absColumn).toUpperCase()}\n            <span className={styles.sort}>\n              {sortType[absColumn]?.sortMode === sortModes.increase && \"⬆\"}\n              {sortType[absColumn]?.sortMode === sortModes.decrease && \"⬇\"}\n            </span>\n          </span>\n        </span>\n      );\n    }}\n    theme={{ isGrey: true, barless: true }}\n    scrollLeft={scrollLeft}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollLeft: state.editor.scrollPosition.scrollLeft,\n  sortType: state.sorter.sortType,\n  cellSize: [state.editor.cell.width, state.editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(Columns);\n","export default (number) => {\n  const numberString = number.toString();\n  if (!/\\./.test(numberString)) {\n    return 0;\n  }\n\n  return numberString.length - numberString.indexOf(\".\") - 1;\n};\n","import * as acorn from \"acorn\";\nimport getDecimalTimes from \"./getDecimalTimes\";\n\nconst types = {\n  ExpressionStatement: true,\n  BinaryExpression: true,\n  UnaryExpression: true,\n  CallExpression: true,\n  Literal: true,\n  Identifier: true,\n};\n\nconst operators = {\n  addition: \"addition\",\n  subtraction: \"subtraction\",\n  multiplication: \"multiplication\",\n};\n\nconst getArithmeticResult = (a, b, operator) => {\n  const timeValue = Math.pow(\n    10,\n    Math.max(getDecimalTimes(a), getDecimalTimes(b))\n  );\n\n  switch (operator) {\n    case operators.addition:\n      return (a * timeValue + b * timeValue) / timeValue;\n    case operators.subtraction:\n      return (a * timeValue - b * timeValue) / timeValue;\n    case operators.multiplication:\n      return (a * timeValue * b * timeValue) / timeValue / timeValue;\n    default:\n      throw new Error(\"Invalid arithmetic operator\");\n  }\n};\n\nexport default function calculate(\n  parseString,\n  { isVariable, getVariableValue },\n  { isFunction, getFunction }\n) {\n  try {\n    const value = getValue(\n      acorn.parse(parseString, {\n        ecmaVersion: 2020,\n      }).body[0].expression\n    );\n    return [false, value];\n  } catch (syntaxError) {\n    return [syntaxError, 0];\n  }\n\n  function getValue(block) {\n    if (!types[block.type]) {\n      throw new Error(\"Unsupported syntax block\" + block.type);\n    }\n\n    if (block.type === \"Literal\") {\n      if (!/\\d+/.test(block.value)) {\n        throw new Error(\"invalid literal value\");\n      }\n\n      return block.value;\n    }\n\n    if (block.type === \"UnaryExpression\") {\n      if (!/\\+|-/.test(block.operator)) {\n        throw new Error(\"Invalid Unary Expression\");\n      }\n\n      return block.operator === \"+\"\n        ? getValue(block.argument)\n        : -getValue(block.argument);\n    }\n\n    if (block.type === \"BinaryExpression\") {\n      let rightHandNumber = getValue(block.right);\n      switch (block.operator) {\n        case \"+\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.addition\n          );\n        case \"-\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.subtraction\n          );\n        case \"*\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.multiplication\n          );\n        case \"/\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) / rightHandNumber;\n        case \"%\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) % rightHandNumber;\n        default:\n          throw new Error(\"Unknown operator detected\");\n      }\n    }\n\n    if (block.type === \"CallExpression\") {\n      const functionName = block.callee.name;\n      if (isFunction(functionName)) {\n        return getFunction(functionName).apply(\n          this,\n          block.arguments.map((block) => {\n            return getValue(block);\n          })\n        );\n      } else {\n        throw new Error(\"calling unknown inset function\");\n      }\n    }\n\n    if (block.type === \"Identifier\") {\n      if (isVariable(block.name)) {\n        return getVariableValue(block.name);\n      }\n\n      throw new Error(\"using undefined variable\");\n    }\n  }\n}\n","// import store from \"../models/index\";\n\n// the design is have an ZZZ * 99999999 sheet\nexport const isVariable = (name) => {\n  return /^[a-z]{1,3}\\d{1,8}$$/gim.test(name);\n};\n\nexport const getVariableValue = (name) => {\n  // const [, col, rows] = /^([a-z]+)(\\d+)$/.match(name);\n  // return store.getState().sheets.rows?.[rows]?.[col] || 0;\n  return 0;\n};\n","import getDecimalTimes from \"../getDecimalTimes\";\n\nexport default function SUM(...numbers) {\n  let index = 0;\n  let sum = 0;\n  let times = 0;\n\n  while (index < numbers.length) {\n    let value = numbers[index];\n\n    if (typeof value === \"string\") {\n      value = Number(value);\n    }\n\n    if (!(typeof value === \"number\")) {\n      value = 0;\n    }\n\n    const decimalTimes = getDecimalTimes(value);\n\n    if (decimalTimes > times) {\n      sum *= Math.pow(10, decimalTimes - times);\n      value *= Math.pow(10, decimalTimes);\n      times = decimalTimes;\n    } else if (decimalTimes <= times) {\n      value *= Math.pow(10, times);\n    }\n\n    sum += value;\n    index++;\n  }\n\n  return sum / Math.pow(10, times);\n}\n","import sum from \"./sum\";\n\nexport default (...numbers) => {\n  if (numbers.length === 0) {\n    return 0;\n  }\n  return sum(...numbers) / numbers.length;\n};\n","import sum from \"./calculateFunctions/sum\";\nimport avg from \"./calculateFunctions/avg\";\nimport pi from \"./calculateFunctions/pi\";\n\nconst insetFunctions = {\n  SUM: sum,\n  AVG: avg,\n  PI: pi,\n};\n\nexport const isFunction = (name) => name.toUpperCase() in insetFunctions;\n\nexport const getFunction = (name) => {\n  return isFunction(name) && insetFunctions[name.toUpperCase()];\n};\n","export default () => Math.PI;\n","const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\nexport default function getTextLength(text) {\n  if (text === undefined) {\n    return 0;\n  }\n  ctx.font = \"16px sans-serif\";\n  return ctx.measureText(text).width;\n}\n\nexport const registerTextFont = () => {};\n","import { cellSize } from \"../theTableConfig.json\";\n\nexport const modes = {\n  normal: \"normal\",\n  focused: \"focused\",\n  editing: \"editing\",\n};\n\nexport default {\n  state: {\n    mode: modes.normal,\n    cell: {\n      width: cellSize[0],\n      height: cellSize[1],\n    },\n    scrollPosition: {\n      scrollLeft: 0,\n      scrollTop: 0,\n    },\n    focusCell: {\n      row: 0,\n      col: 0,\n    },\n    editingValue: \"\",\n  },\n  reducers: {\n    updateScrollPosition(state, payload) {\n      return {\n        ...state,\n        scrollPosition: payload,\n      };\n    },\n    updateMode(state, payload) {\n      return {\n        ...state,\n        mode: payload,\n      };\n    },\n    updateFocusCell(state, payload) {\n      return {\n        ...state,\n        focusCell: payload,\n      };\n    },\n    updateEditingValue(state, payload) {\n      return {\n        ...state,\n        editingValue: payload,\n      };\n    },\n  },\n  effects: (dispatch) => ({}),\n};\n","import React, { useEffect, useState } from \"react\";\nimport stringCalc from \"../../../utils/stringCalc\";\nimport { isVariable, getVariableValue } from \"../../../utils/getVariable\";\nimport { isFunction, getFunction } from \"../../../utils/getFunctions\";\nimport getTextLength from \"../../../utils/getTextLength\";\nimport styles from \"../main.module.css\";\nimport canBeNumber from \"../../../utils/canBeNumber\";\nimport { connect } from \"react-redux\";\nimport { modes } from \"../../../models/editor\";\n\nconst errorInfo = \"#ERROR\";\n\nexport const EditingCell = ({\n  dispatch,\n  onBlur,\n  sheets,\n  row,\n  col,\n  cellSize,\n}) => {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {\n    expression: \"\",\n    value: \"\",\n  };\n\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    setWidth(\n      Math.max(\n        1,\n        width,\n        Math.ceil(getTextLength(cell.expression || cell.value) / cellSize[0])\n      )\n    );\n  }, [cell, cellSize, width]);\n\n  const onChangeHandler = (ev) => {\n    const data = ev.target.value;\n\n    if (getTextLength(data) > width * cellSize[0]) {\n      console.log(width);\n      setWidth(width + 1);\n    }\n  };\n\n  const onUpdateHandler = (ev) => {\n    const data = ev.target.value;\n    const isExpression = /^=/.test(data);\n    let result;\n    let expression;\n\n    if (isExpression) {\n      expression = data.slice(1);\n      const [error, calculateResult] = stringCalc(\n        expression,\n        {\n          isVariable,\n          getVariableValue,\n        },\n        {\n          isFunction,\n          getFunction,\n        }\n      );\n\n      if (!error) {\n        result = calculateResult;\n      } else {\n        result = errorInfo;\n      }\n    } else {\n      result = data;\n    }\n\n    let value = result;\n\n    if (isExpression && result !== errorInfo) {\n      value = Number(value);\n    }\n\n    if (!isExpression && canBeNumber(value)) {\n      value = Number(value);\n    }\n\n    dispatch.sheets.updateValue({\n      row,\n      value,\n      expression,\n      column: col,\n      isExpression,\n    });\n\n    onBlur && onBlur(ev);\n  };\n\n  const onBlurHandler = (ev) => {\n    onUpdateHandler(ev);\n    onBlur && onBlur(ev);\n  };\n\n  return (\n    <div>\n      <div\n        className={styles.focusBlock}\n        style={{\n          width: width * cellSize[0],\n          height: cellSize[1],\n        }}\n        onChange={onChangeHandler}\n        onClick={(ev) => {\n          ev.stopPropagation();\n        }}\n      >\n        <input\n          defaultValue={cell.isExpression ? `=${cell.expression}` : cell.value}\n          autoFocus\n          type=\"text\"\n          className={styles.editingBorderTextContent}\n          onBlur={onBlurHandler}\n          onKeyDown={(ev) => {\n            if (ev.key === \"Enter\") {\n              onUpdateHandler(ev);\n            }\n\n            if (ev.key === \"Escape\") {\n              onUpdateHandler(ev);\n              dispatch.editor.updateMode(modes.focused);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n  cellSize: [state.editor.cell.width, state.editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(EditingCell);\n","export default (value) => {\n  if (typeof value === \"number\") {\n    return true;\n  }\n\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  if (value.length === 0) {\n    return false;\n  }\n\n  // eslint-disable-next-line no-self-compare\n  return +value === +value;\n};\n","import React from \"react\";\nimport styles from \"../main.module.css\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\n\nexport const FocusCell = ({ sheets, row, col, cellSize }) => {\n  const className = classNames({\n    [styles.cell]: true,\n    [styles.focusBlock]: true,\n  });\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {};\n  const value = \"value\" in cell ? cell.value : \"\";\n  return (\n    <div\n      className={className}\n      style={{\n        width: cellSize[0],\n        height: cellSize[1],\n      }}\n    >\n      {value}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ sheets, editor }) => ({\n  sheets,\n  cellSize: [editor.cell.width, editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(FocusCell);\n","import React from \"react\";\nimport EditingCell from \"./EditingCell\";\nimport FocusCell from \"./FocusCell\";\nimport { connect } from \"react-redux\";\nimport { modes } from \"../../models/editor\";\nimport styles from \"./main.module.css\";\n\nexport const ActiveCell = ({\n  dispatch,\n  focusCell: { row, col },\n  mode,\n  cellSize,\n}) => {\n  const style = { left: col * cellSize[0], top: row * cellSize[1] };\n  if (mode === modes.focused) {\n    return (\n      <div\n        onDoubleClick={(ev) => {\n          dispatch.editor.updateMode(modes.editing);\n        }}\n        onClick={(ev) => {\n          ev.stopPropagation();\n        }}\n        className={styles.activeCellWrapper}\n        style={style}\n      >\n        <FocusCell row={row} col={col} />\n      </div>\n    );\n  }\n\n  if (mode === modes.editing) {\n    return (\n      <div className={styles.activeCellWrapper} style={style}>\n        <EditingCell\n          row={row}\n          col={col}\n          onBlur={() => {\n            dispatch.editor.updateMode(modes.focused);\n          }}\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n  mode: state.editor.mode,\n  focusCell: state.editor.focusCell,\n  cellSize: [state.editor.cell.width, state.editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(ActiveCell);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./main.module.css\";\n\nexport function Cell({\n  relative: { row, column },\n  absolute: { row: absRow, column: absColumn },\n  sheets,\n  cellSize,\n}) {\n  const rowData = sheets.rows[absRow] || {};\n  const cell = rowData[absColumn] || {};\n  const value = \"value\" in cell ? cell.value : \"\";\n  return (\n    <div\n      className={styles.cell}\n      key={`${row}-${column}`}\n      style={{\n        left: column * cellSize[0],\n        top: row * cellSize[1],\n        width: cellSize[0],\n        height: cellSize[1],\n      }}\n    >\n      {value}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n  cellSize: [state.editor.cell.width, state.editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(Cell);\n","export default {\n  state: {\n    rows: {},\n  },\n  reducers: {\n    updateValue(state, payload) {\n      return {\n        ...state,\n        rows: {\n          ...state.rows,\n          [payload.row]: {\n            ...state.rows[payload.row],\n            [payload.column]: payload,\n          },\n        },\n      };\n    },\n    changeRow(state, payload) {\n      const row = state.rows[999];\n      delete state.rows[999];\n      return {\n        ...state,\n        rows: {\n          0: row,\n        },\n      };\n    },\n    rebuildSheets(state, payload) {\n      return payload;\n    },\n  },\n  effects: {},\n};\n","import { init } from \"@rematch/core\";\nimport sheets from \"./sheets\";\nimport editor from \"./editor\";\nimport sorter from \"./sorter\";\n\nconst store = init({\n  models: {\n    sheets,\n    editor,\n    sorter,\n  },\n});\n\nwindow.store = store;\n\nexport default store;\n","import store from \"../../models/index\";\nimport { modes as editorModes } from \"../../models/editor\";\n\nexport default ([rows, columns]) => {\n  document.addEventListener(\n    \"keydown\",\n    function (event) {\n      const { key, code } = event;\n      const { focusCell, mode } = store.getState().editor;\n\n      if (/^Arrow\\w+/.test(key)) {\n        if (mode === editorModes.focused) {\n          event.preventDefault();\n          if (key === \"ArrowUp\") {\n            if (focusCell.row > 0) {\n              store.dispatch.editor.updateFocusCell({\n                ...focusCell,\n                row: focusCell.row - 1,\n              });\n            }\n          } else if (key === \"ArrowDown\") {\n            if (focusCell.row < rows - 1) {\n              store.dispatch.editor.updateFocusCell({\n                ...focusCell,\n                row: focusCell.row + 1,\n              });\n            }\n          } else if (key === \"ArrowLeft\") {\n            if (focusCell.col > 0) {\n              store.dispatch.editor.updateFocusCell({\n                ...focusCell,\n                col: focusCell.col - 1,\n              });\n            }\n          } else if (key === \"ArrowRight\") {\n            if (focusCell.col < columns - 1) {\n              store.dispatch.editor.updateFocusCell({\n                ...focusCell,\n                col: focusCell.col + 1,\n              });\n            }\n          }\n        }\n      }\n\n      console.log(event.code);\n      if (/^space$/i.test(code)) {\n        if (mode !== editorModes.editing) {\n          event.preventDefault();\n        }\n      }\n    },\n    false\n  );\n};\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport ActiveCell from \"../ActiveCell\";\nimport Cell from \"../Cell\";\nimport { connect } from \"react-redux\";\nimport { modes } from \"../../models/editor\";\nimport registerKeyboardListeners from \"./registerKeyboardListeners\";\nimport { tableSize } from \"../../theTableConfig.json\";\n\nregisterKeyboardListeners(tableSize);\n\nexport const DataTable = ({ dispatch, sheets, cellSize }) => {\n  return (\n    <InfiniteGrid\n      size={tableSize}\n      cellSize={cellSize}\n      getData={(position) => {\n        const {\n          relative: { row, column },\n          absolute: { row: absRow, column: absColumn },\n        } = position;\n        if (sheets.rows?.[absRow]?.[absColumn]) {\n          return <Cell key={`${row}-${column}`} {...position} />;\n        }\n\n        return null;\n      }}\n      onClick={(ev) => {\n        dispatch.editor.updateFocusCell({\n          row: parseInt(ev.nativeEvent.offsetY / cellSize[1]),\n          col: parseInt(ev.nativeEvent.offsetX / cellSize[0]),\n        });\n        dispatch.editor.updateMode(modes.focused);\n      }}\n      theme={{\n        isGrey: false,\n      }}\n      onScroll={(positionData) => {\n        dispatch.editor.updateScrollPosition(positionData);\n      }}\n    >\n      <ActiveCell />\n    </InfiniteGrid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n  cellSize: [state.editor.cell.width, state.editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(DataTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./main.module.css\";\n\nexport const CornerBlock = ({ cellSize }) => {\n  return (\n    <div className={styles.cornerBlock} style={{ height: cellSize[1] }}></div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  cellSize: [state.editor.cell.width, state.editor.cell.height],\n});\n\nexport default connect(mapStateToProps)(CornerBlock);\n","import React from \"react\";\nimport Rows from \"./components/Rows\";\nimport Columns from \"./components/Columns\";\nimport DataTable from \"./components/DataTable\";\nimport CornerBlock from \"./components/CornerBlock\";\nimport styles from \"./app.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <div className={styles.tableApplication}>\n        <div className={styles.rowsTitle}>\n          <CornerBlock />\n          <Rows />\n        </div>\n        <div className={styles.dataContent}>\n          <div className={styles.columnHeader}>\n            <Columns />\n          </div>\n          <div className={styles.contentTable}>\n            <DataTable />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./models\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"focusBlock\":\"main_focusBlock__1BEst\",\"editingBorder\":\"main_editingBorder__QkzpS\",\"editingBorderTextContent\":\"main_editingBorderTextContent___xjOU\",\"activeCellWrapper\":\"main_activeCellWrapper__2b12p\",\"cell\":\"main_cell__1jeUE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"tableApplication\":\"app_tableApplication__3tpc6\",\"rowsTitle\":\"app_rowsTitle__2Zbtn\",\"dataContent\":\"app_dataContent__3hjQe\",\"contentTable\":\"app_contentTable__1qSbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"main_grey__2Mkp3\",\"tableContent\":\"main_tableContent__3uOra\",\"barless\":\"main_barless__hNoCM\",\"tableContainer\":\"main_tableContainer__2Zf2n\",\"focus\":\"main_focus__-eHuC\",\"cell\":\"main_cell__2WWoR\"};"],"sourceRoot":""}