{"version":3,"sources":["components/InfiniteGrid/index.js","components/Rows/index.js","utils/excelColumnStrNum.js","components/Columns/index.js","utils/getDecimalTimes.js","utils/stringCalc.js","utils/getVariable.js","utils/calculateFunctions/sum.js","utils/calculateFunctions/avg.js","utils/getFunctions.js","utils/calculateFunctions/pi.js","utils/getTextLength.js","components/ActiveCell/EditingCell/index.js","components/ActiveCell/FocusCell/index.js","components/ActiveCell/index.js","components/Cell/index.js","components/DataTable /index.js","App.js","models/sheets.js","models/editor.js","models/index.js","index.js","app.module.css","components/InfiniteGrid/main.module.css","components/ActiveCell/main.module.css"],"names":["InfiniteGrid","size","cellSize","getData","onClick","theme","scrollLeft","scrollTop","onScroll","children","containerRef","useRef","useState","position","updatePosition","contentSize","updateContentSize","maxPosition","setMaxPosition","useEffect","width","current","offsetWidth","height","offsetHeight","contentBlockWidth","Math","ceil","contentBlockHeight","restBlocksInX","maxPositionX","parseInt","restBlocksInY","maxPositionY","scrollContainer","updateContentPanel","x","y","needUpdate","nextX","nextY","addEventListener","removeEventListener","containerClassName","classnames","styles","grey","isGrey","tableContainer","barless","console","log","ref","className","style","overflow","tableContent","left","top","Array","from","length","map","a","colIndex","rowIndex","cell","connect","state","editor","scrollPosition","row","col","ordA","charCodeAt","number","str","String","fromCharCode","floor","numberToColumnString","toUpperCase","numberString","toString","test","indexOf","types","ExpressionStatement","BinaryExpression","UnaryExpression","CallExpression","Literal","Identifier","operators","getArithmeticResult","b","operator","timeValue","pow","max","getDecimalTimes","Error","isVariable","name","getVariableValue","SUM","index","sum","times","numbers","value","Number","decimalTimes","insetFunctions","AVG","PI","isFunction","getFunction","ctx","document","createElement","getContext","getTextLength","text","font","measureText","sheets","onBlur","rows","expression","setValue","setWidth","focusBlock","ev","stopPropagation","defaultValue","autoFocus","type","onChange","data","target","parseString","getValue","block","argument","rightHandNumber","right","functionName","callee","apply","this","arguments","acorn","ecmaVersion","body","syntaxError","stringCalc","slice","error","result","editingBorderTextContent","onKeyDown","key","ActiveCell","dispatch","editing","setEditing","onDoubleClick","changePosition","nativeEvent","offsetX","offsetY","positionData","updateScrollPosition","App","app","tableApplication","rowsTitle","cornerBlock","dataContent","columnHeader","contentTable","initialState","11","12","columns","1","A12","refedBy","isExpression","A11","reducers","updateValue","payload","column","changeRow","13","effects","mode","selectedValue","store","init","models","window","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dcdbe8b7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport styles from \"./main.module.css\";\n\nexport function InfiniteGrid({\n  size,\n  cellSize,\n  getData,\n  onClick,\n  theme = {},\n  scrollLeft = 0,\n  scrollTop = 0,\n  onScroll,\n  children,\n}) {\n  const containerRef = useRef();\n  const [position, updatePosition] = useState([0, 0]);\n  const [contentSize, updateContentSize] = useState([0, 0]);\n  const [maxPosition, setMaxPosition] = useState([0, 0]);\n\n  useEffect(() => {\n    const width = containerRef.current.offsetWidth;\n    const height = containerRef.current.offsetHeight;\n\n    let contentBlockWidth = Math.ceil((width / cellSize[0]) * 2);\n    let contentBlockHeight = Math.ceil((height / cellSize[1]) * 2);\n\n    let restBlocksInX = size[0] % contentBlockWidth;\n    let maxPositionX = parseInt(size[0] / contentBlockWidth);\n    contentBlockWidth += restBlocksInX;\n\n    let restBlocksInY = size[1] % contentBlockHeight;\n    let maxPositionY = parseInt(size[1] / contentBlockHeight);\n    contentBlockHeight += restBlocksInY;\n\n    if (contentBlockWidth > size[0]) {\n      contentBlockWidth = size[0];\n      maxPositionX = 0;\n    }\n    if (contentBlockHeight > size[1]) {\n      contentBlockHeight = size[1];\n      maxPositionY = 0;\n    }\n\n    updateContentSize([contentBlockWidth, contentBlockHeight]);\n    setMaxPosition([maxPositionX, maxPositionY]);\n  }, [size, cellSize]);\n\n  useEffect(() => {\n    const scrollContainer = containerRef.current;\n    const updateContentPanel = function () {\n      const scrollTop = scrollContainer.scrollTop;\n      const scrollLeft = scrollContainer.scrollLeft;\n      const offsetWidth = (contentSize[0] / 2) * cellSize[0];\n      const offsetHeight = (contentSize[1] / 2) * cellSize[1];\n\n      const [x, y] = position;\n      let needUpdate = false;\n      let nextX = x;\n      let nextY = y;\n\n      if (parseInt(scrollLeft / offsetWidth) !== x) {\n        if (nextX <= maxPosition[0]) {\n          nextX = parseInt(scrollLeft / offsetWidth);\n          needUpdate = true;\n        }\n      }\n\n      if (parseInt(scrollTop / offsetHeight) !== y) {\n        if (nextY <= maxPosition[1]) {\n          nextY = parseInt(scrollTop / offsetHeight);\n          needUpdate = true;\n        }\n      }\n\n      if (needUpdate) {\n        updatePosition([nextX, nextY]);\n      }\n\n      onScroll && onScroll({ scrollLeft, scrollTop });\n    };\n\n    scrollContainer.addEventListener(\"scroll\", updateContentPanel, false);\n    return () =>\n      scrollContainer.removeEventListener(\"scroll\", updateContentPanel, false);\n  }, [contentSize, position, maxPosition, cellSize, onScroll]);\n\n  const containerClassName = classnames({\n    [styles.grey]: theme.isGrey,\n    [styles.tableContainer]: true,\n    [styles.barless]: theme.barless,\n  });\n\n  useEffect(() => {\n    console.log(scrollLeft, scrollTop);\n    containerRef.current.scrollLeft = scrollLeft;\n    containerRef.current.scrollTop = scrollTop;\n  }, [scrollLeft, scrollTop]);\n\n  return (\n    <div ref={containerRef} className={containerClassName}>\n      <div\n        style={{\n          width: size[0] * cellSize[0],\n          height: size[1] * cellSize[1],\n          overflow: \"hidden\",\n        }}\n        onClick={onClick}\n      >\n        <div\n          className={styles.tableContent}\n          style={{\n            width: contentSize[0] * cellSize[0],\n            height: contentSize[1] * cellSize[1],\n            left: ((position[0] * contentSize[0]) / 2) * cellSize[0],\n            top: ((position[1] * contentSize[1]) / 2) * cellSize[1],\n          }}\n        >\n          {Array.from({ length: contentSize[0] }).map((a, colIndex) => {\n            return Array.from({ length: contentSize[1] }).map((a, rowIndex) => {\n              return (\n                <div\n                  className={styles.cell}\n                  style={{\n                    left: colIndex * 60,\n                    top: rowIndex * 20,\n                  }}\n                >\n                  {getData(\n                    (position[1] * contentSize[1]) / 2 + rowIndex,\n                    (position[0] * contentSize[0]) / 2 + colIndex\n                  )}\n                </div>\n              );\n            });\n          })}\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { connect } from \"react-redux\";\n\nexport const Rows = ({ scrollTop }) => (\n  <InfiniteGrid\n    size={[1, 80]}\n    cellSize={[60, 20]}\n    getData={(row, col) => {\n      return row + 1;\n    }}\n    theme={{\n      barless: true,\n      isGrey: true,\n    }}\n    scrollTop={scrollTop}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollTop: state.editor.scrollPosition.scrollTop,\n});\n\nexport default connect(mapStateToProps)(Rows);\n","var ordA = \"a\".charCodeAt(0);\nvar ordZ = \"z\".charCodeAt(0);\nvar length = ordZ - ordA + 1;\n\n// https://stackoverflow.com/a/8241071/4670002\nexport function numberToColumnString(number) {\n  var str = \"\";\n  while (number >= 0) {\n    str = String.fromCharCode((number % length) + ordA) + str;\n    number = Math.floor(number / length) - 1;\n  }\n  return str;\n}\n\n// https://stackoverflow.com/a/9906193/4670002\nexport function columnStringToNumber(string) {\n  let i;\n  let j;\n  let result = 0;\n\n  for (i = 0, j = string.length - 1; i < string.length; i += 1, j -= 1) {\n    result += Math.pow(length, j) * (string[i].charCodeAt(0) - ordA + 1);\n  }\n\n  return result - 1;\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { numberToColumnString } from \"../../utils/excelColumnStrNum\";\nimport { connect } from \"react-redux\";\n\nexport const Columns = ({ scrollLeft }) => (\n  <InfiniteGrid\n    size={[30, 1]}\n    cellSize={[60, 20]}\n    getData={(row, col) => {\n      return numberToColumnString(col).toUpperCase();\n    }}\n    theme={{ isGrey: true, barless: true }}\n    scrollLeft={scrollLeft}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollLeft: state.editor.scrollPosition.scrollLeft,\n});\n\nexport default connect(mapStateToProps)(Columns);\n","export default (number) => {\n  const numberString = number.toString();\n  if (!/\\./.test(numberString)) {\n    return 0;\n  }\n\n  return numberString.length - numberString.indexOf(\".\") - 1;\n};\n","import * as acorn from \"acorn\";\nimport getDecimalTimes from \"./getDecimalTimes\";\n\nconst types = {\n  ExpressionStatement: true,\n  BinaryExpression: true,\n  UnaryExpression: true,\n  CallExpression: true,\n  Literal: true,\n  Identifier: true,\n};\n\nconst operators = {\n  addition: \"addition\",\n  subtraction: \"subtraction\",\n  multiplication: \"multiplication\",\n};\n\nconst getArithmeticResult = (a, b, operator) => {\n  const timeValue = Math.pow(\n    10,\n    Math.max(getDecimalTimes(a), getDecimalTimes(b))\n  );\n\n  switch (operator) {\n    case operators.addition:\n      return (a * timeValue + b * timeValue) / timeValue;\n    case operators.subtraction:\n      return (a * timeValue - b * timeValue) / timeValue;\n    case operators.multiplication:\n      return (a * timeValue * b * timeValue) / timeValue / timeValue;\n    default:\n      throw new Error(\"Invalid arithmetic operator\");\n  }\n};\n\nexport default function calculate(\n  parseString,\n  { isVariable, getVariableValue },\n  { isFunction, getFunction }\n) {\n  try {\n    const value = getValue(\n      acorn.parse(parseString, {\n        ecmaVersion: 2020,\n      }).body[0].expression\n    );\n    return [false, value];\n  } catch (syntaxError) {\n    return [syntaxError, 0];\n  }\n\n  function getValue(block) {\n    if (!types[block.type]) {\n      throw new Error(\"Unsupported syntax block\" + block.type);\n    }\n\n    if (block.type === \"Literal\") {\n      if (!/\\d+/.test(block.value)) {\n        throw new Error(\"invalid literal value\");\n      }\n\n      return block.value;\n    }\n\n    if (block.type === \"UnaryExpression\") {\n      if (!/\\+|-/.test(block.operator)) {\n        throw new Error(\"Invalid Unary Expression\");\n      }\n\n      return block.operator === \"+\"\n        ? getValue(block.argument)\n        : -getValue(block.argument);\n    }\n\n    if (block.type === \"BinaryExpression\") {\n      let rightHandNumber = getValue(block.right);\n      switch (block.operator) {\n        case \"+\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.addition\n          );\n        case \"-\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.subtraction\n          );\n        case \"*\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.multiplication\n          );\n        case \"/\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) / rightHandNumber;\n        case \"%\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) % rightHandNumber;\n        default:\n          throw new Error(\"Unknown operator detected\");\n      }\n    }\n\n    if (block.type === \"CallExpression\") {\n      const functionName = block.callee.name;\n      if (isFunction(functionName)) {\n        return getFunction(functionName).apply(\n          this,\n          block.arguments.map((block) => {\n            return getValue(block);\n          })\n        );\n      } else {\n        throw new Error(\"calling unknown inset function\");\n      }\n    }\n\n    if (block.type === \"Identifier\") {\n      if (isVariable(block.name)) {\n        return getVariableValue(block.name);\n      }\n\n      throw new Error(\"using undefined variable\");\n    }\n  }\n}\n","// import store from \"../models/index\";\n\n// the design is have an ZZZ * 99999999 sheet\nexport const isVariable = (name) => {\n  return /^[a-z]{1,3}\\d{1,8}$$/gim.test(name);\n};\n\nexport const getVariableValue = (name) => {\n  // const [, col, rows] = /^([a-z]+)(\\d+)$/.match(name);\n  // return store.getState().sheets.cols[rows][col];\n  return 1;\n};\n","import getDecimalTimes from \"../getDecimalTimes\";\n\nexport default function SUM(...numbers) {\n  let index = 0;\n  let sum = 0;\n  let times = 0;\n\n  while (index < numbers.length) {\n    let value = numbers[index];\n\n    if (typeof value === \"string\") {\n      value = Number(value);\n    }\n\n    if (!(typeof value === \"number\")) {\n      value = 0;\n    }\n\n    const decimalTimes = getDecimalTimes(value);\n\n    if (decimalTimes > times) {\n      sum *= Math.pow(10, decimalTimes - times);\n      value *= Math.pow(10, decimalTimes);\n      times = decimalTimes;\n    } else if (decimalTimes <= times) {\n      value *= Math.pow(10, times);\n    }\n\n    sum += value;\n    index++;\n  }\n\n  return sum / Math.pow(10, times);\n}\n","import sum from \"./sum\";\n\nexport default (...numbers) => {\n  if (numbers.length === 0) {\n    return 0;\n  }\n  return sum(...numbers) / numbers.length;\n};\n","import sum from \"./calculateFunctions/sum\";\nimport avg from \"./calculateFunctions/avg\";\nimport pi from \"./calculateFunctions/pi\";\n\nconst insetFunctions = {\n  SUM: sum,\n  AVG: avg,\n  PI: pi,\n};\n\nexport const isFunction = (name) => name.toUpperCase() in insetFunctions;\n\nexport const getFunction = (name) => {\n  return isFunction(name) && insetFunctions[name.toUpperCase()];\n};\n","export default () => Math.PI;\n","const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\nexport default function getTextLength(text) {\n  ctx.font = \"16px sans-serif\";\n  return ctx.measureText(text).width;\n}\n\nexport const registerTextFont = () => {};\n","import React, { useState } from \"react\";\nimport stringCalc from \"../../../utils/stringCalc\";\nimport { isVariable, getVariableValue } from \"../../../utils/getVariable\";\nimport { isFunction, getFunction } from \"../../../utils/getFunctions\";\nimport getTextLength from \"../../../utils/getTextLength\";\nimport styles from \"../main.module.css\";\nimport { connect } from \"react-redux\";\n\nconst cellWidth = 59;\n\nexport const EditingCell = ({ onBlur, sheets, row, col }) => {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {\n    expression: \"\",\n    value: \"\",\n  };\n\n  const [value, setValue] = useState(\"\");\n  const [width, setWidth] = useState(\n    parseInt(getTextLength(cell.expression) / cellWidth) + 1\n  );\n\n  const onChangeHandler = (ev) => {\n    const data = ev.target.value;\n\n    if (getTextLength(data) > width * cellWidth) {\n      setWidth(width + 1);\n    }\n\n    if (/^=/.test(data)) {\n      const [error, result] = stringCalc(\n        data.slice(1),\n        {\n          isVariable,\n          getVariableValue,\n        },\n        {\n          isFunction,\n          getFunction,\n        }\n      );\n\n      if (!error) {\n        setValue(result);\n      } else {\n        setValue(\"#ERROR\");\n      }\n    } else {\n      setValue(data);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        className={styles.focusBlock}\n        style={{\n          width: width * cellWidth,\n        }}\n        onClick={(ev) => {\n          ev.stopPropagation();\n        }}\n      >\n        <input\n          defaultValue={cell.expression}\n          autoFocus\n          type=\"text\"\n          onChange={onChangeHandler}\n          className={styles.editingBorderTextContent}\n          onBlur={onBlur}\n          onKeyDown={(ev) => {\n            if (ev.key === \"Enter\") {\n              console.log(\"updateValue\");\n            }\n          }}\n        />\n      </div>\n      {value}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(EditingCell);\n","import React from \"react\";\nimport styles from \"../main.module.css\";\nimport { connect } from \"react-redux\";\n\nexport const FocusCell = ({ sheets, row, col }) => {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {};\n  return <div className={styles.focusBlock}>{cell.value || \"\"}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(FocusCell);\n","import React, { useState } from \"react\";\nimport EditingCell from \"./EditingCell\";\nimport FocusCell from \"./FocusCell\";\nimport { connect } from \"react-redux\";\n\nexport const ActiveCell = ({ dispatch, row, col }) => {\n  const [editing, setEditing] = useState(false);\n  return (\n    <div>\n      {editing ? (\n        <EditingCell\n          row={row}\n          col={col}\n          onBlur={() => {\n            // dispatch.sheets.updateValue();\n            setEditing(false);\n          }}\n        ></EditingCell>\n      ) : (\n        <div\n          onDoubleClick={(ev) => {\n            setEditing(true);\n          }}\n          onClick={(ev) => {\n            ev.stopPropagation();\n          }}\n        >\n          <FocusCell row={row} col={col} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(ActiveCell);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nexport function Cell({ col, row, sheets }) {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {};\n  return <div>{cell.value || \"\"}</div>;\n}\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(Cell);\n","import React, { useState } from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { ActiveCell } from \"../ActiveCell\";\nimport Cell from \"../Cell\";\nimport { connect } from \"react-redux\";\n\nexport const DataTable = ({ dispatch }) => {\n  const [position, changePosition] = useState([0, 0]);\n  return (\n    <InfiniteGrid\n      size={[30, 80]}\n      cellSize={[60, 20]}\n      getData={(row, col) => {\n        return <Cell row={row} col={col} />;\n      }}\n      onClick={(ev) => {\n        changePosition([\n          parseInt(ev.nativeEvent.offsetX / 60),\n          parseInt(ev.nativeEvent.offsetY / 20),\n        ]);\n      }}\n      theme={{\n        isGrey: false,\n      }}\n      onScroll={(positionData) => {\n        dispatch.editor.updateScrollPosition(positionData);\n      }}\n    >\n      <div\n        style={{\n          position: \"absolute\",\n          left: position[0] * 60,\n          top: position[1] * 20,\n        }}\n      >\n        <ActiveCell row={position[1]} col={position[0]} />\n      </div>\n    </InfiniteGrid>\n  );\n};\n\nexport default connect()(DataTable);\n","import React from \"react\";\nimport Rows from \"./components/Rows\";\nimport Columns from \"./components/Columns\";\nimport DataTable from \"./components/DataTable \";\nimport styles from \"./app.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <div className={styles.tableApplication}>\n        <div className={styles.rowsTitle}>\n          <div className={styles.cornerBlock}></div>\n          <Rows />\n        </div>\n        <div className={styles.dataContent}>\n          <div className={styles.columnHeader}>\n            <Columns />\n          </div>\n          <div className={styles.contentTable}>\n            <DataTable />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  rows: {\n    11: {},\n    12: {},\n  },\n  columns: {\n    1: {},\n  },\n};\n\nconst A12 = {\n  row: initialState.rows[12],\n  col: initialState.columns[1],\n  value: 25,\n  refedBy: [],\n  isExpression: true,\n  expression: \"A11*2+1\",\n};\n\nconst A11 = {\n  row: initialState.rows[11],\n  col: initialState.columns[1],\n  value: 12,\n  refedBy: [A12],\n  isExpression: true,\n  expression: \"1+4*2+SUM(1,2)\",\n};\n\ninitialState.rows[11][1] = A11;\ninitialState.rows[12][1] = A12;\n\nexport default {\n  state: initialState,\n  reducers: {\n    updateValue(state, payload) {\n      return {\n        ...state,\n        rows: {\n          ...state.rows,\n          [payload.row]: {\n            ...state.rows[payload.row],\n            [payload.column]: payload.value,\n          },\n        },\n      };\n    },\n    changeRow(state, payload) {\n      const row = state.rows[11];\n      delete state.rows[11];\n      return {\n        ...state,\n        rows: {\n          ...state.rows,\n          13: row,\n        },\n      };\n    },\n  },\n  effects: {},\n};\n","export default {\n  state: {\n    mode: \"\" /* focused | editing */,\n    expression: \"\",\n    selectedValue: {\n      /* row,col */\n    },\n    cell: {\n      width: 60,\n      height: 20,\n    },\n    scrollPosition: {\n      scrollLeft: 0,\n      scrollTop: 0,\n    },\n  },\n  reducers: {\n    updateScrollPosition(state, payload) {\n      return {\n        ...state,\n        scrollPosition: payload,\n      };\n    },\n  },\n  effects: (dispatch) => ({}),\n};\n","import { init } from \"@rematch/core\";\nimport sheets from \"./sheets\";\nimport editor from \"./editor\";\n\nconst store = init({\n  models: {\n    sheets,\n    editor,\n  },\n});\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./models\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"tableApplication\":\"app_tableApplication__3tpc6\",\"rowsTitle\":\"app_rowsTitle__2Zbtn\",\"cornerBlock\":\"app_cornerBlock__iLuJQ\",\"dataContent\":\"app_dataContent__3hjQe\",\"columnHeader\":\"app_columnHeader__298vN\",\"contentTable\":\"app_contentTable__1qSbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"main_grey__2Mkp3\",\"tableContent\":\"main_tableContent__3uOra\",\"barless\":\"main_barless__hNoCM\",\"tableContainer\":\"main_tableContainer__2Zf2n\",\"focus\":\"main_focus__-eHuC\",\"cell\":\"main_cell__2WWoR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"focusBlock\":\"main_focusBlock__1BEst\",\"editingBorder\":\"main_editingBorder__QkzpS\",\"editingBorderTextContent\":\"main_editingBorderTextContent___xjOU\"};"],"sourceRoot":""}