{"version":3,"sources":["components/Rows/main.module.css","components/Columns/main.module.css","components/Cell/main.module.css","components/InfiniteGrid/index.js","components/Rows/index.js","utils/excelColumnStrNum.js","components/Columns/index.js","utils/getDecimalTimes.js","utils/stringCalc.js","utils/getVariable.js","utils/calculateFunctions/sum.js","utils/calculateFunctions/avg.js","utils/getFunctions.js","utils/calculateFunctions/pi.js","utils/getTextLength.js","components/ActiveCell/EditingCell/index.js","components/ActiveCell/FocusCell/index.js","models/editor.js","components/ActiveCell/index.js","components/Cell/index.js","components/DataTable /index.js","App.js","models/sheets.js","models/index.js","index.js","components/ActiveCell/main.module.css","app.module.css","components/InfiniteGrid/main.module.css"],"names":["module","exports","InfiniteGrid","size","cellSize","getData","onClick","theme","scrollLeft","scrollTop","onScroll","children","containerRef","useRef","useState","position","updatePosition","contentSize","updateContentSize","gridSize","updateGridSize","maxPage","updateMaxPage","useEffect","width","current","offsetWidth","height","offsetHeight","gridWidth","Math","ceil","gridHeight","pageRestPixelsWidth","pageRestPixelsHeight","contentBlockWidth","contentBlockHeight","maxPageX","parseInt","maxPageY","scrollContainer","updateContentPanel","needUpdate","x","y","nextX","nextY","addEventListener","removeEventListener","containerClassName","classnames","styles","grey","isGrey","tableContainer","barless","ref","className","style","overflow","tableContent","left","top","Array","from","length","map","a","colIndex","rowIndex","relative","row","column","absolute","connect","state","editor","scrollPosition","absRow","rowHeaderItem","key","ordA","charCodeAt","absColumn","columnTitle","number","str","String","fromCharCode","floor","numberToColumnString","toUpperCase","numberString","toString","test","indexOf","types","ExpressionStatement","BinaryExpression","UnaryExpression","CallExpression","Literal","Identifier","operators","getArithmeticResult","b","operator","timeValue","pow","max","getDecimalTimes","Error","isVariable","name","getVariableValue","SUM","index","sum","times","numbers","value","Number","decimalTimes","insetFunctions","AVG","PI","isFunction","getFunction","ctx","document","createElement","getContext","getTextLength","text","undefined","font","measureText","sheets","dispatch","onBlur","col","cell","rows","expression","setWidth","onUpdateHandler","ev","result","data","target","isExpression","parseString","getValue","block","type","argument","rightHandNumber","right","functionName","callee","apply","this","arguments","acorn","ecmaVersion","body","syntaxError","stringCalc","slice","error","calculateResult","updateValue","focusBlock","onChange","stopPropagation","defaultValue","autoFocus","editingBorderTextContent","onKeyDown","modes","mode","focusCell","reducers","updateScrollPosition","payload","updateMode","updateFocusCell","effects","onDoubleClick","activeCellWrapper","nativeEvent","offsetY","offsetX","positionData","App","app","tableApplication","rowsTitle","cornerBlock","dataContent","columnHeader","contentTable","columns","changeRow","13","store","init","models","window","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b46c809d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"rowHeaderItem\":\"main_rowHeaderItem__3Llca\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"columnTitle\":\"main_columnTitle__1FTAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"main_cell__1Fu2A\"};","import React, { useState, useEffect, useRef } from \"react\";\nimport classnames from \"classnames\";\nimport styles from \"./main.module.css\";\n\nexport function InfiniteGrid({\n  size,\n  cellSize,\n  getData,\n  onClick,\n  theme = {},\n  scrollLeft = 0,\n  scrollTop = 0,\n  onScroll,\n  children,\n}) {\n  const containerRef = useRef();\n  const [position, updatePosition] = useState([0, 0]);\n  const [contentSize, updateContentSize] = useState([0, 0]);\n  const [gridSize, updateGridSize] = useState([0, 0]);\n  const [maxPage, updateMaxPage] = useState([0, 0]);\n\n  useEffect(() => {\n    const width = containerRef.current.offsetWidth;\n    const height = containerRef.current.offsetHeight;\n\n    const gridWidth = Math.ceil(width / cellSize[0]);\n    const gridHeight = Math.ceil(height / cellSize[1]);\n\n    let pageRestPixelsWidth = size[0] % gridWidth;\n    let pageRestPixelsHeight = size[1] % gridHeight;\n\n    const xAxisGrid = gridWidth * 2 > size[0] ? size[0] : gridWidth * 2;\n    const yAxisGrid = gridHeight * 2 > size[1] ? size[1] : gridHeight * 2;\n\n    let contentBlockWidth = xAxisGrid + pageRestPixelsWidth;\n    let contentBlockHeight = yAxisGrid + pageRestPixelsHeight;\n\n    let maxPageX = parseInt(size[0] / gridWidth) - 1;\n    let maxPageY = parseInt(size[1] / gridHeight) - 1;\n\n    if (maxPageX > 2) {\n      maxPageX -= 1;\n    }\n\n    if (maxPageY > 2) {\n      maxPageY -= 1;\n    }\n\n    updateGridSize([gridWidth, gridHeight]);\n    updateContentSize([contentBlockWidth, contentBlockHeight]);\n    updateMaxPage([maxPageX, maxPageY]);\n  }, [size, cellSize]);\n\n  useEffect(() => {\n    const scrollContainer = containerRef.current;\n\n    const updateContentPanel = function () {\n      const { scrollTop, scrollLeft } = scrollContainer;\n\n      let needUpdate = false;\n\n      const [x, y] = position;\n      let nextX = parseInt(scrollLeft / (gridSize[0] * cellSize[0]));\n      let nextY = parseInt(scrollTop / (gridSize[1] * cellSize[1]));\n\n      nextX = nextX > maxPage[0] ? maxPage[0] : nextX;\n      nextY = nextY > maxPage[1] ? maxPage[1] : nextY;\n\n      if (nextX !== x) {\n        needUpdate = true;\n      }\n\n      if (nextY !== y) {\n        needUpdate = true;\n      }\n\n      if (needUpdate) {\n        updatePosition([nextX, nextY]);\n      }\n\n      onScroll && onScroll({ scrollLeft, scrollTop });\n    };\n\n    scrollContainer.addEventListener(\"scroll\", updateContentPanel, false);\n    return () =>\n      scrollContainer.removeEventListener(\"scroll\", updateContentPanel, false);\n  }, [contentSize, position, cellSize, onScroll, gridSize, maxPage]);\n\n  const containerClassName = classnames({\n    [styles.grey]: theme.isGrey,\n    [styles.tableContainer]: true,\n    [styles.barless]: theme.barless,\n  });\n\n  useEffect(() => {\n    containerRef.current.scrollLeft = scrollLeft;\n    containerRef.current.scrollTop = scrollTop;\n  }, [scrollLeft, scrollTop]);\n\n  return (\n    <div ref={containerRef} className={containerClassName}>\n      <div\n        style={{\n          width: size[0] * cellSize[0],\n          height: size[1] * cellSize[1],\n          overflow: \"hidden\",\n        }}\n        onClick={onClick}\n      >\n        <div\n          className={styles.tableContent}\n          style={{\n            width: contentSize[0] * cellSize[0],\n            height: contentSize[1] * cellSize[1],\n            left: position[0] * gridSize[0] * cellSize[0],\n            top: position[1] * gridSize[1] * cellSize[1],\n          }}\n        >\n          {Array.from({ length: contentSize[0] }).map((a, colIndex) => {\n            return Array.from({ length: contentSize[1] }).map((a, rowIndex) => {\n              return getData({\n                relative: {\n                  row: rowIndex,\n                  column: colIndex,\n                },\n                absolute: {\n                  row: position[1] * gridSize[1] + rowIndex,\n                  column: position[0] * gridSize[0] + colIndex,\n                },\n              });\n            });\n          })}\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { connect } from \"react-redux\";\nimport styles from \"./main.module.css\";\n\nexport const Rows = ({ scrollTop }) => (\n  <InfiniteGrid\n    size={[1, 1000]}\n    cellSize={[60, 20]}\n    getData={({ relative: { row, column }, absolute: { row: absRow } }) => {\n      return (\n        <span\n          className={styles.rowHeaderItem}\n          key={`${row}-${column}`}\n          style={{\n            left: column * 60,\n            top: row * 20,\n          }}\n        >\n          {absRow + 1}\n        </span>\n      );\n    }}\n    theme={{\n      barless: true,\n      isGrey: true,\n    }}\n    scrollTop={scrollTop}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollTop: state.editor.scrollPosition.scrollTop,\n});\n\nexport default connect(mapStateToProps)(Rows);\n","var ordA = \"a\".charCodeAt(0);\nvar ordZ = \"z\".charCodeAt(0);\nvar length = ordZ - ordA + 1;\n\n// https://stackoverflow.com/a/8241071/4670002\nexport function numberToColumnString(number) {\n  var str = \"\";\n  while (number >= 0) {\n    str = String.fromCharCode((number % length) + ordA) + str;\n    number = Math.floor(number / length) - 1;\n  }\n  return str;\n}\n\n// https://stackoverflow.com/a/9906193/4670002\nexport function columnStringToNumber(string) {\n  let i;\n  let j;\n  let result = 0;\n\n  for (i = 0, j = string.length - 1; i < string.length; i += 1, j -= 1) {\n    result += Math.pow(length, j) * (string[i].charCodeAt(0) - ordA + 1);\n  }\n\n  return result - 1;\n}\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport { numberToColumnString } from \"../../utils/excelColumnStrNum\";\nimport { connect } from \"react-redux\";\nimport styles from \"./main.module.css\";\n\nexport const Columns = ({ scrollLeft }) => (\n  <InfiniteGrid\n    size={[1000, 1]}\n    cellSize={[60, 20]}\n    getData={({\n      relative: { row, column },\n      absolute: { column: absColumn },\n    }) => {\n      return (\n        <span\n          key={`${row}-${column}`}\n          className={styles.columnTitle}\n          style={{\n            left: column * 60,\n            top: row * 20,\n          }}\n        >\n          {numberToColumnString(absColumn).toUpperCase()}\n        </span>\n      );\n    }}\n    theme={{ isGrey: true, barless: true }}\n    scrollLeft={scrollLeft}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  scrollLeft: state.editor.scrollPosition.scrollLeft,\n});\n\nexport default connect(mapStateToProps)(Columns);\n","export default (number) => {\n  const numberString = number.toString();\n  if (!/\\./.test(numberString)) {\n    return 0;\n  }\n\n  return numberString.length - numberString.indexOf(\".\") - 1;\n};\n","import * as acorn from \"acorn\";\nimport getDecimalTimes from \"./getDecimalTimes\";\n\nconst types = {\n  ExpressionStatement: true,\n  BinaryExpression: true,\n  UnaryExpression: true,\n  CallExpression: true,\n  Literal: true,\n  Identifier: true,\n};\n\nconst operators = {\n  addition: \"addition\",\n  subtraction: \"subtraction\",\n  multiplication: \"multiplication\",\n};\n\nconst getArithmeticResult = (a, b, operator) => {\n  const timeValue = Math.pow(\n    10,\n    Math.max(getDecimalTimes(a), getDecimalTimes(b))\n  );\n\n  switch (operator) {\n    case operators.addition:\n      return (a * timeValue + b * timeValue) / timeValue;\n    case operators.subtraction:\n      return (a * timeValue - b * timeValue) / timeValue;\n    case operators.multiplication:\n      return (a * timeValue * b * timeValue) / timeValue / timeValue;\n    default:\n      throw new Error(\"Invalid arithmetic operator\");\n  }\n};\n\nexport default function calculate(\n  parseString,\n  { isVariable, getVariableValue },\n  { isFunction, getFunction }\n) {\n  try {\n    const value = getValue(\n      acorn.parse(parseString, {\n        ecmaVersion: 2020,\n      }).body[0].expression\n    );\n    return [false, value];\n  } catch (syntaxError) {\n    return [syntaxError, 0];\n  }\n\n  function getValue(block) {\n    if (!types[block.type]) {\n      throw new Error(\"Unsupported syntax block\" + block.type);\n    }\n\n    if (block.type === \"Literal\") {\n      if (!/\\d+/.test(block.value)) {\n        throw new Error(\"invalid literal value\");\n      }\n\n      return block.value;\n    }\n\n    if (block.type === \"UnaryExpression\") {\n      if (!/\\+|-/.test(block.operator)) {\n        throw new Error(\"Invalid Unary Expression\");\n      }\n\n      return block.operator === \"+\"\n        ? getValue(block.argument)\n        : -getValue(block.argument);\n    }\n\n    if (block.type === \"BinaryExpression\") {\n      let rightHandNumber = getValue(block.right);\n      switch (block.operator) {\n        case \"+\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.addition\n          );\n        case \"-\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.subtraction\n          );\n        case \"*\":\n          return getArithmeticResult(\n            getValue(block.left),\n            getValue(block.right),\n            operators.multiplication\n          );\n        case \"/\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) / rightHandNumber;\n        case \"%\":\n          if (rightHandNumber === 0) {\n            throw new Error(\"Got 0 as division\");\n          }\n          return getValue(block.left) % rightHandNumber;\n        default:\n          throw new Error(\"Unknown operator detected\");\n      }\n    }\n\n    if (block.type === \"CallExpression\") {\n      const functionName = block.callee.name;\n      if (isFunction(functionName)) {\n        return getFunction(functionName).apply(\n          this,\n          block.arguments.map((block) => {\n            return getValue(block);\n          })\n        );\n      } else {\n        throw new Error(\"calling unknown inset function\");\n      }\n    }\n\n    if (block.type === \"Identifier\") {\n      if (isVariable(block.name)) {\n        return getVariableValue(block.name);\n      }\n\n      throw new Error(\"using undefined variable\");\n    }\n  }\n}\n","// import store from \"../models/index\";\n\n// the design is have an ZZZ * 99999999 sheet\nexport const isVariable = (name) => {\n  return /^[a-z]{1,3}\\d{1,8}$$/gim.test(name);\n};\n\nexport const getVariableValue = (name) => {\n  // const [, col, rows] = /^([a-z]+)(\\d+)$/.match(name);\n  // return store.getState().sheets.cols[rows][col];\n  return 1;\n};\n","import getDecimalTimes from \"../getDecimalTimes\";\n\nexport default function SUM(...numbers) {\n  let index = 0;\n  let sum = 0;\n  let times = 0;\n\n  while (index < numbers.length) {\n    let value = numbers[index];\n\n    if (typeof value === \"string\") {\n      value = Number(value);\n    }\n\n    if (!(typeof value === \"number\")) {\n      value = 0;\n    }\n\n    const decimalTimes = getDecimalTimes(value);\n\n    if (decimalTimes > times) {\n      sum *= Math.pow(10, decimalTimes - times);\n      value *= Math.pow(10, decimalTimes);\n      times = decimalTimes;\n    } else if (decimalTimes <= times) {\n      value *= Math.pow(10, times);\n    }\n\n    sum += value;\n    index++;\n  }\n\n  return sum / Math.pow(10, times);\n}\n","import sum from \"./sum\";\n\nexport default (...numbers) => {\n  if (numbers.length === 0) {\n    return 0;\n  }\n  return sum(...numbers) / numbers.length;\n};\n","import sum from \"./calculateFunctions/sum\";\nimport avg from \"./calculateFunctions/avg\";\nimport pi from \"./calculateFunctions/pi\";\n\nconst insetFunctions = {\n  SUM: sum,\n  AVG: avg,\n  PI: pi,\n};\n\nexport const isFunction = (name) => name.toUpperCase() in insetFunctions;\n\nexport const getFunction = (name) => {\n  return isFunction(name) && insetFunctions[name.toUpperCase()];\n};\n","export default () => Math.PI;\n","const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n\nexport default function getTextLength(text) {\n  if (text === undefined) {\n    return 0;\n  }\n  ctx.font = \"16px sans-serif\";\n  return ctx.measureText(text).width;\n}\n\nexport const registerTextFont = () => {};\n","import React, { useEffect, useState } from \"react\";\nimport stringCalc from \"../../../utils/stringCalc\";\nimport { isVariable, getVariableValue } from \"../../../utils/getVariable\";\nimport { isFunction, getFunction } from \"../../../utils/getFunctions\";\nimport getTextLength from \"../../../utils/getTextLength\";\nimport styles from \"../main.module.css\";\nimport { connect } from \"react-redux\";\n\nconst cellWidth = 59;\n\nexport const EditingCell = ({ dispatch, onBlur, sheets, row, col }) => {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {\n    expression: \"\",\n    value: \"\",\n  };\n\n  const [width, setWidth] = useState(\n    parseInt(getTextLength(cell.expression) / cellWidth) + 1\n  );\n\n  useEffect(() => {\n    setWidth(parseInt(getTextLength(cell.expression) / cellWidth) + 1);\n  }, [cell.expression]);\n\n  const onChangeHandler = (ev) => {\n    const data = ev.target.value;\n\n    if (getTextLength(data) > width * cellWidth) {\n      setWidth(width + 1);\n    }\n  };\n\n  const onUpdateHandler = (ev) => {\n    const data = ev.target.value;\n    const isExpression = /^=/.test(data);\n    let result;\n    let expression;\n\n    if (isExpression) {\n      expression = data.slice(1);\n      const [error, calculateResult] = stringCalc(\n        expression,\n        {\n          isVariable,\n          getVariableValue,\n        },\n        {\n          isFunction,\n          getFunction,\n        }\n      );\n\n      if (!error) {\n        result = calculateResult;\n      } else {\n        result = \"#ERROR\";\n      }\n    } else {\n      result = data;\n    }\n\n    dispatch.sheets.updateValue({\n      row,\n      column: col,\n      isExpression,\n      value: result,\n      expression: expression,\n    });\n\n    onBlur && onBlur(ev);\n  };\n\n  const onBlurHandler = (ev) => {\n    onUpdateHandler(ev);\n    onBlur && onBlur(ev);\n  };\n\n  return (\n    <div>\n      <div\n        className={styles.focusBlock}\n        style={{\n          width: width * cellWidth,\n        }}\n        onChange={onChangeHandler}\n        onClick={(ev) => {\n          ev.stopPropagation();\n        }}\n      >\n        <input\n          defaultValue={cell.isExpression ? `=${cell.expression}` : cell.value}\n          autoFocus\n          type=\"text\"\n          className={styles.editingBorderTextContent}\n          onBlur={onBlurHandler}\n          onKeyDown={(ev) => {\n            if (ev.key === \"Enter\") {\n              onUpdateHandler(ev);\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(EditingCell);\n","import React from \"react\";\nimport styles from \"../main.module.css\";\nimport { connect } from \"react-redux\";\n\nexport const FocusCell = ({ sheets, row, col }) => {\n  const rowData = sheets.rows[row] || {};\n  const cell = rowData[col] || {};\n  const value = \"value\" in cell ? cell.value : \"\";\n  return <div className={styles.focusBlock}>{value}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(FocusCell);\n","export const modes = {\n  normal: \"normal\",\n  focused: \"focused\",\n  editing: \"editing\",\n};\n\nexport default {\n  state: {\n    mode: modes.normal,\n    cell: {\n      width: 60,\n      height: 20,\n    },\n    scrollPosition: {\n      scrollLeft: 0,\n      scrollTop: 0,\n    },\n    focusCell: {\n      row: 0,\n      col: 0,\n    },\n  },\n  reducers: {\n    updateScrollPosition(state, payload) {\n      return {\n        ...state,\n        scrollPosition: payload,\n      };\n    },\n    updateMode(state, payload) {\n      return {\n        ...state,\n        mode: payload,\n      };\n    },\n    updateFocusCell(state, payload) {\n      return {\n        ...state,\n        focusCell: payload,\n      };\n    },\n  },\n  effects: (dispatch) => ({}),\n};\n","import React from \"react\";\nimport EditingCell from \"./EditingCell\";\nimport FocusCell from \"./FocusCell\";\nimport { connect } from \"react-redux\";\nimport { modes } from \"../../models/editor\";\nimport styles from \"./main.module.css\";\n\nexport const ActiveCell = ({ dispatch, focusCell: { row, col }, mode }) => {\n  const style = { left: col * 60, top: row * 20 };\n  if (mode === modes.focused) {\n    return (\n      <div\n        onDoubleClick={(ev) => {\n          dispatch.editor.updateMode(modes.editing);\n        }}\n        onClick={(ev) => {\n          ev.stopPropagation();\n        }}\n        className={styles.activeCellWrapper}\n        style={style}\n      >\n        <FocusCell row={row} col={col} />\n      </div>\n    );\n  }\n\n  if (mode === modes.editing) {\n    return (\n      <div className={styles.activeCellWrapper} style={style}>\n        <EditingCell\n          row={row}\n          col={col}\n          onBlur={() => {\n            dispatch.editor.updateMode(modes.focused);\n          }}\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n  mode: state.editor.mode,\n  focusCell: state.editor.focusCell,\n});\n\nexport default connect(mapStateToProps)(ActiveCell);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./main.module.css\";\n\nexport function Cell({\n  relative: { row, column },\n  absolute: { row: absRow, column: absColumn },\n  sheets,\n}) {\n  const rowData = sheets.rows[absRow] || {};\n  const cell = rowData[absColumn] || {};\n  const value = \"value\" in cell ? cell.value : \"\";\n  return (\n    <div\n      className={styles.cell}\n      key={`${row}-${column}`}\n      style={{\n        left: column * 60,\n        top: row * 20,\n      }}\n    >\n      {value}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(Cell);\n","import React from \"react\";\nimport { InfiniteGrid } from \"../InfiniteGrid\";\nimport ActiveCell from \"../ActiveCell\";\nimport Cell from \"../Cell\";\nimport { connect } from \"react-redux\";\nimport { modes } from \"../../models/editor\";\n\nexport const DataTable = ({ dispatch, sheets }) => {\n  return (\n    <InfiniteGrid\n      size={[1000, 1000]}\n      cellSize={[60, 20]}\n      getData={(position) => {\n        const {\n          relative: { row, column },\n          absolute: { row: absRow, column: absColumn },\n        } = position;\n        if (sheets.rows?.[absRow]?.[absColumn]) {\n          return <Cell key={`${row}-${column}`} {...position} />;\n        }\n\n        return null;\n      }}\n      onClick={(ev) => {\n        dispatch.editor.updateFocusCell({\n          row: parseInt(ev.nativeEvent.offsetY / 20),\n          col: parseInt(ev.nativeEvent.offsetX / 60),\n        });\n        dispatch.editor.updateMode(modes.focused);\n      }}\n      theme={{\n        isGrey: false,\n      }}\n      onScroll={(positionData) => {\n        dispatch.editor.updateScrollPosition(positionData);\n      }}\n    >\n      <ActiveCell />\n    </InfiniteGrid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  sheets: state.sheets,\n});\n\nexport default connect(mapStateToProps)(DataTable);\n","import React from \"react\";\nimport Rows from \"./components/Rows\";\nimport Columns from \"./components/Columns\";\nimport DataTable from \"./components/DataTable \";\nimport styles from \"./app.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <div className={styles.tableApplication}>\n        <div className={styles.rowsTitle}>\n          <div className={styles.cornerBlock}></div>\n          <Rows />\n        </div>\n        <div className={styles.dataContent}>\n          <div className={styles.columnHeader}>\n            <Columns />\n          </div>\n          <div className={styles.contentTable}>\n            <DataTable />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  rows: {},\n  columns: {},\n};\n\nexport default {\n  state: initialState,\n  reducers: {\n    updateValue(state, payload) {\n      return {\n        ...state,\n        rows: {\n          ...state.rows,\n          [payload.row]: {\n            ...state.rows[payload.row],\n            [payload.column]: payload,\n          },\n        },\n      };\n    },\n    changeRow(state, payload) {\n      const row = state.rows[11];\n      delete state.rows[11];\n      return {\n        ...state,\n        rows: {\n          ...state.rows,\n          13: row,\n        },\n      };\n    },\n  },\n  effects: {},\n};\n","import { init } from \"@rematch/core\";\nimport sheets from \"./sheets\";\nimport editor from \"./editor\";\n\nconst store = init({\n  models: {\n    sheets,\n    editor,\n  },\n});\n\nwindow.store = store;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport store from \"./models\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"focusBlock\":\"main_focusBlock__1BEst\",\"editingBorder\":\"main_editingBorder__QkzpS\",\"editingBorderTextContent\":\"main_editingBorderTextContent___xjOU\",\"activeCellWrapper\":\"main_activeCellWrapper__2b12p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"tableApplication\":\"app_tableApplication__3tpc6\",\"rowsTitle\":\"app_rowsTitle__2Zbtn\",\"cornerBlock\":\"app_cornerBlock__iLuJQ\",\"dataContent\":\"app_dataContent__3hjQe\",\"columnHeader\":\"app_columnHeader__298vN\",\"contentTable\":\"app_contentTable__1qSbT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grey\":\"main_grey__2Mkp3\",\"tableContent\":\"main_tableContent__3uOra\",\"barless\":\"main_barless__hNoCM\",\"tableContainer\":\"main_tableContainer__2Zf2n\",\"focus\":\"main_focus__-eHuC\",\"cell\":\"main_cell__2WWoR\"};"],"sourceRoot":""}